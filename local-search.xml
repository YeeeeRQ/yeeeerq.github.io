<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Windows下MySQL安装</title>
    <link href="/2023/01/10/Windows%E4%B8%8BMySQL%E5%AE%89%E8%A3%85/"/>
    <url>/2023/01/10/Windows%E4%B8%8BMySQL%E5%AE%89%E8%A3%85/</url>
    
    <content type="html"><![CDATA[<h2 id="Windows服务管理"><a href="#Windows服务管理" class="headerlink" title="Windows服务管理"></a>Windows服务管理</h2><p>查看系统服务</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">services.msc<br></code></pre></td></tr></table></figure><p>服务启动与停止</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh">net start servicename<br>net stop mysql<br></code></pre></td></tr></table></figure><hr><h2 id="MySQL安装"><a href="#MySQL安装" class="headerlink" title="MySQL安装"></a>MySQL安装</h2><ol><li><p>下载</p></li><li><p>环境变量添加</p></li><li><p>初始化</p> <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">mysqld --initialize-insecure<br></code></pre></td></tr></table></figure></li><li><p>服务注册</p> <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">mysqld --install<br></code></pre></td></tr></table></figure></li><li><p>服务启动与停止</p> <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh">net start mysql<br>net stop mysql<br></code></pre></td></tr></table></figure></li><li><p>修改mysql默认账户密码  </p> <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">mysqladmin -u root password 1234<br></code></pre></td></tr></table></figure><p> <strong>备注：生产环境注意保证密码强度</strong></p></li><li><p>登录mysql</p> <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">mysql -uroot -p1234 -h IP<br></code></pre></td></tr></table></figure></li></ol><hr><h2 id="MySQL卸载"><a href="#MySQL卸载" class="headerlink" title="MySQL卸载"></a>MySQL卸载</h2><ol><li><p>停止服务</p> <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">net stop mysql<br></code></pre></td></tr></table></figure></li><li><p>取消服务注册</p> <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">mysql --remove mysql<br></code></pre></td></tr></table></figure></li><li><p>删除相关环境变量</p></li><li><p>删除相关文件</p></li></ol><hr>]]></content>
    
    
    <categories>
      
      <category>MySQL</category>
      
    </categories>
    
    
    <tags>
      
      <tag>MySQL</tag>
      
      <tag>MySQL安装</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>认识HTML</title>
    <link href="/2023/01/08/%E8%AE%A4%E8%AF%86HTML/"/>
    <url>/2023/01/08/%E8%AE%A4%E8%AF%86HTML/</url>
    
    <content type="html"><![CDATA[<p>HTML，英文全称HyperText Markup Language，直译超文本标记语言。HTML的发明者是Tim Berners-Lee 。</p><hr><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">http-equiv</span>=<span class="hljs-string">&quot;X-UA-Compatible&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;IE=edge&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;viewport&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>Document<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>    <br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><p>它是网页的骨架，反映整个页面的结构。Web工程师们用它来构建丰富多彩的网页界面。</p><h2 id="章节标签"><a href="#章节标签" class="headerlink" title="章节标签"></a>章节标签</h2><ul><li>标题 h1~h6</li><li>章节 sectioon</li><li>文章 article</li><li>段落 p</li><li>头部 header</li><li>脚部 footer</li><li>主要内容 main</li><li>旁支内容 aside</li><li>划分 div</li></ul><h2 id="内容标签"><a href="#内容标签" class="headerlink" title="内容标签"></a>内容标签</h2><ul><li>有序列表 ol + li</li><li>无序列表 ul + li</li><li>自定义列表 dl + dt + dd</li><li>预格式化文本 pre</li><li>分隔 hr</li><li>换行 br</li><li>超链接 a</li><li>强调（句子中的强调，页面表现一般为斜体） em</li><li>强调（页面强调, 页面表现一般为加粗）strong </li><li>代码段 code</li><li>引用 quote</li><li>块引用 blockquote</li></ul><h2 id="全局属性"><a href="#全局属性" class="headerlink" title="全局属性"></a>全局属性</h2><p>所有标签都拥有的属性.</p><ul><li>id</li><li>class</li><li>style</li><li>title</li><li>tabindex</li><li>hidden</li><li>contenteditable</li></ul><h2 id="默认样式"><a href="#默认样式" class="headerlink" title="默认样式"></a>默认样式</h2><ul><li><p>UserAgent<br>一般指代用户使用的浏览器</p></li><li><p>CSS Reset<br>为什么？不同浏览器有不同的默认样式, CSS Reset可以去除浏览器自带的默认样式。</p></li><li><p>CSS Normalize.css</p></li></ul><h2 id="语义化"><a href="#语义化" class="headerlink" title="语义化"></a>语义化</h2><p>不同标签包含不同的语义，学习时要注意其使用场景。<br>具体语义参见W3C文档</p><ul><li>b </li><li>stong</li><li>i </li><li>em<br>…</li></ul><h2 id="相关学习网站"><a href="#相关学习网站" class="headerlink" title="相关学习网站"></a>相关学习网站</h2><p><a href="https://htmldog.com/">HTML Dog</a><br><a href="https://www.w3schools.com/">w3schools</a><br><a href="https://developer.mozilla.org/">MDN HTML page</a></p>]]></content>
    
    
    <categories>
      
      <category>HTML</category>
      
    </categories>
    
    
    <tags>
      
      <tag>HTML</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>同源策略与跨域</title>
    <link href="/2023/01/08/%E5%90%8C%E6%BA%90%E7%AD%96%E7%95%A5%E4%B8%8E%E8%B7%A8%E5%9F%9F/"/>
    <url>/2023/01/08/%E5%90%8C%E6%BA%90%E7%AD%96%E7%95%A5%E4%B8%8E%E8%B7%A8%E5%9F%9F/</url>
    
    <content type="html"><![CDATA[<h2 id="安全限制"><a href="#安全限制" class="headerlink" title="安全限制"></a>安全限制</h2><p>同源策略是浏览器的一种<strong>安全限制</strong>, 保障用户的数据安全和隐私安全。</p><h2 id="跨域判断"><a href="#跨域判断" class="headerlink" title="跨域判断"></a>跨域判断</h2><p>判断AJAX请求的URL是否不同，不同就是跨域访问。</p><p>URL &#x3D; 协议 + 域名 + 端口</p><h2 id="JSONP"><a href="#JSONP" class="headerlink" title="JSONP"></a>JSONP</h2><p>本质：浏览器允许跨域引用JavaScript资源。</p><h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">let</span> js = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">createElement</span>(<span class="hljs-string">&#x27;script&#x27;</span>);<br><span class="hljs-keyword">let</span> head = <span class="hljs-variable language_">document</span>.<span class="hljs-property">getElementsByTagName</span>[<span class="hljs-string">&#x27;head&#x27;</span>](<span class="hljs-number">0</span>);<br><br>js.<span class="hljs-property">src</span> = <span class="hljs-string">&#x27;http://xxx.api/testapi?callback=xxx&#x27;</span><br>head.<span class="hljs-title function_">appendChild</span>(js);<br></code></pre></td></tr></table></figure><h3 id="CORS"><a href="#CORS" class="headerlink" title="CORS"></a>CORS</h3><p>CORS : Cross-Origin Resource Sharing</p><p>后端设置响应字段</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs text">Access-Control-Allow-Origin: http://xxx.com<br>Access-Control-Allow-Methods: POST, GET, PUT, OPTIONS<br>Access-Control-Max-Age: 86400<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Browser</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Browser</tag>
      
      <tag>JSONP</tag>
      
      <tag>CORS</tag>
      
      <tag>同源策略</tag>
      
      <tag>跨域</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Web前端工程化 - 使用yarn进行包管理</title>
    <link href="/2023/01/08/Web%E5%89%8D%E7%AB%AF%E5%B7%A5%E7%A8%8B%E5%8C%96%20-%20%E4%BD%BF%E7%94%A8yarn%E8%BF%9B%E8%A1%8C%E5%8C%85%E7%AE%A1%E7%90%86/"/>
    <url>/2023/01/08/Web%E5%89%8D%E7%AB%AF%E5%B7%A5%E7%A8%8B%E5%8C%96%20-%20%E4%BD%BF%E7%94%A8yarn%E8%BF%9B%E8%A1%8C%E5%8C%85%E7%AE%A1%E7%90%86/</url>
    
    <content type="html"><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>yarn是npm的一个替代, 由facebook发布。yarn相比npm更加安全可靠且速度更优。</p><h2 id="常用指令"><a href="#常用指令" class="headerlink" title="常用指令"></a>常用指令</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs bash">yarn <span class="hljs-built_in">help</span><br><br>yarn config <br><br>yarn init<br><br>yarn install<br><br>yarn add<br><br>yarn up<br><br>yarn remove<br><br>yarn info<br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">yarn <span class="hljs-built_in">set</span> version latest<br></code></pre></td></tr></table></figure><p>助记：<br><code>help init install add up remove global</code></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs text"># 包名指定<br>[package]<br>[package]@[version]<br>[package]@[tag]<br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">yarn add/up/remove/... [package]<br>yarn add/up/remove/... [package]@[version]<br>yarn add/up/remove/... [package]@[tag]<br></code></pre></td></tr></table></figure><p>指定依赖类别</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">yarn add [package] --dev <br>yarn add [package] --peer<br></code></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Todo">## 软件源管理 yrm<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Web</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Web</tag>
      
      <tag>yarn</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>iconfiont的使用</title>
    <link href="/2023/01/08/iconfont%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
    <url>/2023/01/08/iconfont%E7%9A%84%E4%BD%BF%E7%94%A8/</url>
    
    <content type="html"><![CDATA[<p><a href="www.iconfont.cn">Iconfont</a><br>注册并登录<br>先将喜欢的图标添加至购物车，然后再到购物车里讲图标添加至项目。</p><h1 id="CDN引用"><a href="#CDN引用" class="headerlink" title="CDN引用"></a>CDN引用</h1><h2 id="symbol引用"><a href="#symbol引用" class="headerlink" title="symbol引用"></a>symbol引用</h2><hr><p>注册并登录<br>先将喜欢的图标添加至购物车，然后再到购物车里讲图标添加至项目。</p><p>查看在线链接</p><p>生成代码</p><p>拷贝对应链接</p><p>使用:</p><h3 id="第一步：拷贝项目下面生成的symbol代码："><a href="#第一步：拷贝项目下面生成的symbol代码：" class="headerlink" title="第一步：拷贝项目下面生成的symbol代码："></a>第一步：拷贝项目下面生成的symbol代码：</h3><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-regexp">//</span>at.alicdn.com<span class="hljs-regexp">/t/</span>font_8d5l8fzk5b87iudi.js<br></code></pre></td></tr></table></figure><h3 id="第二步：加入通用css代码（引入一次就行）："><a href="#第二步：加入通用css代码（引入一次就行）：" class="headerlink" title="第二步：加入通用css代码（引入一次就行）："></a>第二步：加入通用css代码（引入一次就行）：</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">style</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/css&quot;</span>&gt;</span><span class="language-css"></span><br><span class="language-css">    <span class="hljs-selector-class">.icon</span> &#123;</span><br><span class="language-css">       <span class="hljs-attribute">width</span>: <span class="hljs-number">1em</span>; <span class="hljs-attribute">height</span>: <span class="hljs-number">1em</span>;</span><br><span class="language-css">       <span class="hljs-attribute">vertical-align</span>: -<span class="hljs-number">0.15em</span>;</span><br><span class="language-css">       fill: currentColor;</span><br><span class="language-css">       <span class="hljs-attribute">overflow</span>: hidden;</span><br><span class="language-css">    &#125;</span><br><span class="language-css"></span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="第三步：挑选相应图标并获取类名，应用于页面："><a href="#第三步：挑选相应图标并获取类名，应用于页面：" class="headerlink" title="第三步：挑选相应图标并获取类名，应用于页面："></a>第三步：挑选相应图标并获取类名，应用于页面：</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">svg</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;icon&quot;</span> <span class="hljs-attr">aria-hidden</span>=<span class="hljs-string">&quot;true&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">use</span> <span class="hljs-attr">xlink:href</span>=<span class="hljs-string">&quot;#icon-xxx&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">use</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">svg</span>&gt;</span><br></code></pre></td></tr></table></figure><hr><h1 id="本地引用"><a href="#本地引用" class="headerlink" title="本地引用"></a>本地引用</h1><p>将项目文件(.zip)下载至本地。</p><p>解压得到:<br>![[Pasted image 20220503093628.png]]</p><p>选定， iconfont.css iconfont.ttf iconfont.woff iconfont.woff2</p><p>将css文件放入项目</p><p>其余字体文件放入css文件同级目录下iconfont目录(自己建)</p><p>项目中引入iconfont.css</p><h2 id="unicode-引用"><a href="#unicode-引用" class="headerlink" title="unicode 引用"></a>unicode 引用</h2><hr><p>unicode是字体在网页端最原始的应用方式，特点是：</p><ul><li>兼容性最好，支持ie6+，及所有现代浏览器。</li><li>支持按字体的方式去动态调整图标大小，颜色等等。</li><li>但是因为是字体，所以不支持多色。只能使用平台里单色的图标，就算项目里有多色图标也会自动去色。</li></ul><blockquote><p>注意：新版iconfont支持多色图标，这些多色图标在unicode模式下将不能使用，如果有需求建议使用symbol的引用方式</p></blockquote><p>unicode使用步骤如下：</p><h3 id="第一步：拷贝项目下面生成的font-face"><a href="#第一步：拷贝项目下面生成的font-face" class="headerlink" title="第一步：拷贝项目下面生成的font-face"></a>第一步：拷贝项目下面生成的font-face</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-keyword">@font-face</span> &#123;<span class="hljs-attribute">font-family</span>: <span class="hljs-string">&#x27;iconfont&#x27;</span>;<br>    <span class="hljs-attribute">src</span>: <span class="hljs-built_in">url</span>(<span class="hljs-string">&#x27;iconfont.eot&#x27;</span>);<br>    <span class="hljs-attribute">src</span>: <span class="hljs-built_in">url</span>(<span class="hljs-string">&#x27;iconfont.eot?#iefix&#x27;</span>) <span class="hljs-built_in">format</span>(<span class="hljs-string">&#x27;embedded-opentype&#x27;</span>),<br>    <span class="hljs-built_in">url</span>(<span class="hljs-string">&#x27;iconfont.woff&#x27;</span>) <span class="hljs-built_in">format</span>(<span class="hljs-string">&#x27;woff&#x27;</span>),<br>    <span class="hljs-built_in">url</span>(<span class="hljs-string">&#x27;iconfont.ttf&#x27;</span>) <span class="hljs-built_in">format</span>(<span class="hljs-string">&#x27;truetype&#x27;</span>),<br>    <span class="hljs-built_in">url</span>(<span class="hljs-string">&#x27;iconfont.svg#iconfont&#x27;</span>) <span class="hljs-built_in">format</span>(<span class="hljs-string">&#x27;svg&#x27;</span>);<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="第二步：定义使用iconfont的样式"><a href="#第二步：定义使用iconfont的样式" class="headerlink" title="第二步：定义使用iconfont的样式"></a>第二步：定义使用iconfont的样式</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-class">.iconfont</span>&#123;<br>    <span class="hljs-attribute">font-family</span>:<span class="hljs-string">&quot;iconfont&quot;</span> <span class="hljs-meta">!important</span>;<br>    <span class="hljs-attribute">font-size</span>:<span class="hljs-number">16px</span>;<span class="hljs-attribute">font-style</span>:normal;<br>    -webkit-<span class="hljs-attribute">font-smoothing</span>: antialiased;<br>    -webkit-text-stroke-<span class="hljs-attribute">width</span>: <span class="hljs-number">0.2px</span>;<br>    -moz-osx-<span class="hljs-attribute">font-smoothing</span>: grayscale;&#125;<br></code></pre></td></tr></table></figure><h3 id="第三步：挑选相应图标并获取字体编码，应用于页面"><a href="#第三步：挑选相应图标并获取字体编码，应用于页面" class="headerlink" title="第三步：挑选相应图标并获取字体编码，应用于页面"></a>第三步：挑选相应图标并获取字体编码，应用于页面</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">i</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;iconfont&quot;</span>&gt;</span><span class="hljs-symbol">&amp;#x33;</span><span class="hljs-tag">&lt;/<span class="hljs-name">i</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="font-class-引用"><a href="#font-class-引用" class="headerlink" title="font-class 引用"></a>font-class 引用</h2><hr><p>font-class是unicode使用方式的一种变种，主要是解决unicode书写不直观，语意不明确的问题。</p><p>与unicode使用方式相比，具有如下特点：</p><ul><li>兼容性良好，支持ie8+，及所有现代浏览器。</li><li>相比于unicode语意明确，书写更直观。可以很容易分辨这个icon是什么。</li><li>因为使用class来定义图标，所以当要替换图标时，只需要修改class里面的unicode引用。</li><li>不过因为本质上还是使用的字体，所以多色图标还是不支持的。</li></ul><p>使用步骤如下：</p><h3 id="第一步：拷贝项目下面生成的fontclass代码："><a href="#第一步：拷贝项目下面生成的fontclass代码：" class="headerlink" title="第一步：拷贝项目下面生成的fontclass代码："></a>第一步：拷贝项目下面生成的fontclass代码：</h3><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-regexp">//</span>at.alicdn.com<span class="hljs-regexp">/t/</span>font_8d5l8fzk5b87iudi.css<br></code></pre></td></tr></table></figure><h3 id="第二步：挑选相应图标并获取类名，应用于页面："><a href="#第二步：挑选相应图标并获取类名，应用于页面：" class="headerlink" title="第二步：挑选相应图标并获取类名，应用于页面："></a>第二步：挑选相应图标并获取类名，应用于页面：</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">i</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;iconfont icon-xxx&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">i</span>&gt;</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Web</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>JavaScript事件循环</title>
    <link href="/2023/01/08/%E4%BA%8B%E4%BB%B6%E5%BE%AA%E7%8E%AFEventLoop/"/>
    <url>/2023/01/08/%E4%BA%8B%E4%BB%B6%E5%BE%AA%E7%8E%AFEventLoop/</url>
    
    <content type="html"><![CDATA[<h1 id="JavaScript事件循环"><a href="#JavaScript事件循环" class="headerlink" title="JavaScript事件循环"></a>JavaScript事件循环</h1><!-- JavaScript是单线程的，同一个时间只能做一件事。 这意味着所有的函数都需要进入队列排队，按序进行处理。 --><p>事件循环(Event Loop)，是JavaScript运行时环境的一部分，是 JS 为了支持异步和任务优先级而设计的一套调度逻辑, 是一种专门处理回调的机制。</p><!-- 针对浏览器、Node.js 等不同环境有不同的设计（主要是任务优先级的划分粒度不同），Node.js 面对的环境更复杂、对性能要求更高，所以 Event Loop 设计的更复杂一些。 --><p>JavaScript中代码分两类，一类是能够立即执行的，一类是由事件回调组成的（例如，鼠标的点击触发的事件，网络请求的应答）</p><!-- 回调是一定会被完整地执行的，而且事件循环每次仅会执行一个回调。回调过程中不会发生上下文的切换，在事件队列中，只有当前回调执行完成后，下一个才能够执行，无一例外。如果一段回调代码执行时间过长，就会发生阻塞。这也是为什么回调代码应当简短且简单。 --><p>这两类代码，也有人称为同步代码和异步代码</p><!-- 同步任务指的是，在主线程上排队执行的任务，只有前一个任务执行完毕，才能执行后一个任务异步任务指的是，不进入主线程，而是进入任务队列，通过 Event Loop 机制等待合适的时间调用 --><p>为了处理这两类代码，便有了 Event Loop ，由此 JS 便能非阻塞地运行.</p><h2 id="浏览器环境"><a href="#浏览器环境" class="headerlink" title="浏览器环境"></a>浏览器环境</h2><p>浏览器解析js文件,先执行能够立刻执行的同步代码，再将回调函数分成两类加入队列,分别是tasks和jobs队列（有人称为宏任务和微任务队列）,</p><p>浏览器会优先处理jobs队列下的所有任务，处理完毕后再从tasks队列中取一个执行，周而复始。</p><p><img src="https://pic3.zhimg.com/v2-61c035f1e5af822631ba1845b6f5829a_b.jpg" alt="网上找的图"></p><!-- 几个概念：单线程异步任务，同步任务宏任务、微任务 === tasks jobs --><h2 id="区分JavaScript引擎和JavaScript运行时"><a href="#区分JavaScript引擎和JavaScript运行时" class="headerlink" title="区分JavaScript引擎和JavaScript运行时"></a>区分<code>JavaScript引擎</code>和<code>JavaScript运行时</code></h2><p>拿chrome浏览器和node做例子。v8就是他们共同的<code>js引擎</code>。</p><p>对chrome来说，它不止提供了v8引擎，还提供了诸如DOM，BOM，定时器（setTimeout，setInterval），XHR，fetch等<code>Web API</code>, 这些共同构成了<code>JavaScript运行时</code>。</p><p>对node来说，js的解析执行也由v8引擎负责，但为了更好地做本地开发，它提供了OS, http, file相关的API。所以说，虽然两者都能运行js但其提供的功能，应用场景却是不同的。</p><p>简言之，js引擎仅负责js代码的解析，运行时环境则针对不同应用场景加强了js的功能，让程序员们更加方便快捷地进行开发。</p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/EventLoop">MDN docs - The event loop</a></p>]]></content>
    
    
    <categories>
      
      <category>JavaScript</category>
      
    </categories>
    
    
    <tags>
      
      <tag>JavaScript</tag>
      
      <tag>EventLoop</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>JavaScript对象 - 基本使用</title>
    <link href="/2023/01/08/JavaScript%E5%AF%B9%E8%B1%A1-%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/"/>
    <url>/2023/01/08/JavaScript%E5%AF%B9%E8%B1%A1-%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/</url>
    
    <content type="html"><![CDATA[<p>JavaScript中对象声明</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs JavaScript"><br><span class="hljs-keyword">let</span> obj = &#123;<span class="hljs-string">&#x27;name&#x27;</span>:<span class="hljs-string">&#x27;jack&#x27;</span>&#125; <span class="hljs-comment">// 简写</span><br><br><span class="hljs-comment">// or</span><br><br><span class="hljs-keyword">let</span> obj = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Object</span>(&#123;<span class="hljs-string">&#x27;name&#x27;</span>:<span class="hljs-string">&#x27;jack&#x27;</span>&#125;)<br><br></code></pre></td></tr></table></figure><h2 id="删除对象的属性"><a href="#删除对象的属性" class="headerlink" title="删除对象的属性"></a>删除对象的属性</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs JavaScript"><span class="hljs-comment">// 1. </span><br>obj.<span class="hljs-property">name</span> = <span class="hljs-literal">undefined</span><br><br><span class="hljs-comment">// 2.</span><br><span class="hljs-keyword">delete</span> obj.<span class="hljs-property">name</span><br><span class="hljs-keyword">delete</span> obj[<span class="hljs-string">&#x27;name&#x27;</span>]<br><br></code></pre></td></tr></table></figure><p>移除后可以使用<code>in</code>操作符查看属性是否存在。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs JavaScript"><span class="hljs-string">&#x27;name&#x27;</span> <span class="hljs-keyword">in</span> obj<br><span class="hljs-string">&#x27;name&#x27;</span> <span class="hljs-keyword">in</span> obj &amp;&amp; obj.<span class="hljs-property">name</span> === <span class="hljs-literal">undefined</span><br></code></pre></td></tr></table></figure><h2 id="查看对象的属性"><a href="#查看对象的属性" class="headerlink" title="查看对象的属性"></a>查看对象的属性</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs JavaScript"><br><span class="hljs-comment">// 查看单个属性</span><br>obj[<span class="hljs-string">&#x27;key&#x27;</span>]<br>obj.<span class="hljs-property">key</span><br><br><span class="hljs-comment">// 查看多个属性</span><br><span class="hljs-title class_">Object</span>.<span class="hljs-title function_">keys</span>(obj)<br><span class="hljs-title class_">Object</span>.<span class="hljs-title function_">values</span>(obj)<br><span class="hljs-title class_">Object</span>.<span class="hljs-title function_">entries</span>(obj)<br><br><span class="hljs-comment">// 控制台打印</span><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">dir</span>(obj)<br><br></code></pre></td></tr></table></figure><h2 id="修改或增加对象的属性"><a href="#修改或增加对象的属性" class="headerlink" title="修改或增加对象的属性"></a>修改或增加对象的属性</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs JavaScript"><br><span class="hljs-comment">// 操作单个属性</span><br>obj.<span class="hljs-property">name</span> = <span class="hljs-string">&#x27;Tom&#x27;</span><br>obj[<span class="hljs-string">&#x27;name&#x27;</span>] = <span class="hljs-string">&#x27;Tom&#x27;</span><br>obj[<span class="hljs-string">&#x27;na&#x27;</span>+<span class="hljs-string">&#x27;me&#x27;</span>] = <span class="hljs-string">&#x27;Tom&#x27;</span><br><br><span class="hljs-comment">// 操作多个属性</span><br><span class="hljs-title class_">Object</span>.<span class="hljs-title function_">assign</span>(obj, &#123;<span class="hljs-string">&#x27;name&#x27;</span>:<span class="hljs-string">&#x27;jerry&#x27;</span>, <span class="hljs-string">&#x27;age&#x27;</span>:<span class="hljs-number">18</span>&#125;)<br><br></code></pre></td></tr></table></figure><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><h3 id="39-name-39-in-obj-和-obj-hasOwnProperty-39-name-39-的区别"><a href="#39-name-39-in-obj-和-obj-hasOwnProperty-39-name-39-的区别" class="headerlink" title="&#39;name&#39; in obj 和 obj.hasOwnProperty(&#39;name&#39;)的区别"></a><code>&#39;name&#39; in obj</code> 和 <code>obj.hasOwnProperty(&#39;name&#39;)</code>的区别</h3><p><code>&#39;name&#39; in obj</code> 检测 obj及其原型链上是否存在<code>name</code>属性, 不区分<code>自身</code>或<code>共有属性</code>。<br><code>obj.hasOwnProperty(&#39;name&#39;)</code> 检测obj<code>自身属性</code>,而非<code>共有属性</code>。</p>]]></content>
    
    
    <categories>
      
      <category>JavaScript</category>
      
    </categories>
    
    
    <tags>
      
      <tag>JavaScript</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Vue入门前置</title>
    <link href="/2023/01/08/Vue%E5%85%A5%E9%97%A8%E5%89%8D%E7%BD%AE/"/>
    <url>/2023/01/08/Vue%E5%85%A5%E9%97%A8%E5%89%8D%E7%BD%AE/</url>
    
    <content type="html"><![CDATA[<h2 id="入门Vue的必要前置知识"><a href="#入门Vue的必要前置知识" class="headerlink" title="入门Vue的必要前置知识"></a>入门Vue的必要前置知识</h2><ul><li>HTML + CSS + JavaScript.</li><li>有一点Webpack使用经验,理解Module和Plugin.</li><li>对MVC,MVP,MVVM有一定理解.</li></ul><h2 id="我是如何入门使用Vue的"><a href="#我是如何入门使用Vue的" class="headerlink" title="我是如何入门使用Vue的?"></a>我是如何入门使用Vue的?</h2><p>跟着<a href="https://cn.vuejs.org/">Vue.js官网</a>的起步教程, 在首页中点击起步按钮即可阅读相关文档.</p><p>另:<br><a href="https://zhuanlan.zhihu.com/p/23134551">Vue作者尤雨溪 : 新手向：Vue 2.0 的建议学习顺序</a></p><h2 id="Vue不同版本的区别"><a href="#Vue不同版本的区别" class="headerlink" title="Vue不同版本的区别?"></a>Vue不同版本的区别?</h2><p>大体分为两种，完整版和运行时版。<br>含有runtime的就是仅含运行时的版，完整版则包含编译器(compiler)和运行时(runtime).</p><p>例:<br>    <code>vue.js</code>对应完整版(编译器+运行时)<br>    <code>vue.runtime.js</code>对于仅包含运行时版</p><h3 id="该使用啥"><a href="#该使用啥" class="headerlink" title="该使用啥?"></a>该使用啥?</h3><p>个人建议:<br>入门阶段的基本语法学习,部分小demo,验证语法时可以使用完整版.<br>有一定规模的项目,结合打包工具,提前编译后使用仅含运行时的min版本.</p><h3 id="完整版和运行时版编码时的差异"><a href="#完整版和运行时版编码时的差异" class="headerlink" title="完整版和运行时版编码时的差异"></a>完整版和运行时版编码时的差异</h3><p>差异主要体现在template和render的使用上.</p><ul><li>template 特指Vue提供的模板语法</li><li>render 特指Vue实例上的函数</li></ul><p>完整版，可以在HTML页面上直接引入并使用, 且可以在HTML标签上直接使用Vue指令和模板语法，完整版Vue会自动解析语法。</p><p>runtime版，不支持直接在HTML标签上直接使用Vue指令和模板语法，非完整版Vue不支持解析对应的语法。但可以通过render函数构建所需DOM(极为繁琐，一般不这么做)</p><p><strong>示例代码-1</strong>：<br>引入runtime版Vue后通过render构建页面DOM并展示组件数据.注意不使用render无法展示数据.</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs HTML"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span>  <br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;zh&quot;</span>&gt;</span>  <br>  <span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span>    <br>      <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;utf-8&quot;</span>&gt;</span>  <br>      <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>Runtime Vue.js<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span>  <br>  <span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span>  <br>  <span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span>   <br>          <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;app&quot;</span>&gt;</span>&#123;&#123; n &#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>  <br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://cdn.bootcdn.net/ajax/libs/vue/2.6.14/vue.runtime.min.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>  <br>  <span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs JavaScript"><span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;  <br>  <span class="hljs-attr">el</span>:<span class="hljs-string">&#x27;#app&#x27;</span>,  <br>  <span class="hljs-attr">data</span>:&#123;  <br>    <span class="hljs-attr">n</span>: <span class="hljs-number">10</span>  <br>  &#125;,  <br>  <span class="hljs-title function_">render</span>(<span class="hljs-params">createElement</span>)&#123;  <br>    <span class="hljs-keyword">return</span> <span class="hljs-title function_">createElement</span>(<span class="hljs-string">&#x27;div&#x27;</span>, <span class="hljs-variable language_">this</span>.<span class="hljs-property">n</span>)  <br>  &#125;  <br>  <br>&#125;)<br></code></pre></td></tr></table></figure><p><strong>示例代码-2</strong>：<br>引入完整版Vue后通过模板语法构建页面DOM并展示组件数据.</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs HTML"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span>  <br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;zh&quot;</span>&gt;</span>  <br>  <span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span>    <br>      <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;utf-8&quot;</span>&gt;</span>  <br>      <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>Complete Vue.js<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span>  <br>  <span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span>  <br>  <span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span>   <br>          <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;app&quot;</span>&gt;</span>&#123;&#123; n &#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>  <br><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://cdn.bootcdn.net/ajax/libs/vue/2.6.14/vue.min.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs JavaScript"><span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;  <br>  <span class="hljs-attr">el</span>:<span class="hljs-string">&#x27;#app&#x27;</span>,  <br>  <span class="hljs-attr">data</span>:&#123;  <br>    <span class="hljs-attr">n</span>: <span class="hljs-number">10</span>  <br>  &#125;<br>&#125;)<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Vue</category>
      
    </categories>
    
    
    <tags>
      
      <tag>JavaScript</tag>
      
      <tag>Vue</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>TypeScript 笔记 01</title>
    <link href="/2023/01/08/TypeScript%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-01/"/>
    <url>/2023/01/08/TypeScript%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-01/</url>
    
    <content type="html"><![CDATA[<p>TypeScript 是 JavaScript的超集，针对JS对类型的不足进行了增强，在中大型项目中采用TS能有效减少因类型错误导致的BUG，且使项目更加易读好维护。</p><h2 id="JS、TS中有哪些数据类型？"><a href="#JS、TS中有哪些数据类型？" class="headerlink" title="JS、TS中有哪些数据类型？"></a>JS、TS中有哪些数据类型？</h2><p>JS:</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs text">null undefined<br>number string boolean bigint symbol <br>object<br></code></pre></td></tr></table></figure><p>TS 包含JS已有的类型，同时额外增加了以下几类:</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs text">void never enum unknown any<br>自定义类型：type、interface<br></code></pre></td></tr></table></figure><p>type关键字也可用作类型别名之用</p><hr><h2 id="TS中描述对象的数据类型"><a href="#TS中描述对象的数据类型" class="headerlink" title="TS中描述对象的数据类型"></a>TS中描述对象的数据类型</h2><ol><li>class、constructor</li><li>type、interface</li></ol><p>Object 一般不做使用，囊括的范围太大了</p><p>不用Object, 使用 <strong>索引签名</strong> 或 <strong>Record泛型</strong> 来描述普通对象</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs text">普通对象 Object<br>    数组对象 Array<br>    函数对象 Function<br>    正则对象 RegExp<br>    日期对象 Date<br></code></pre></td></tr></table></figure><p>如下三种类型描述是等价的</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs TypeScript"><span class="hljs-keyword">type</span> A = &#123;<br> [<span class="hljs-variable constant_">KEY</span> : <span class="hljs-built_in">string</span>] : <span class="hljs-built_in">number</span> <span class="hljs-comment">// KEY 可以用任意字面量替代描述, 一个合适的描述可以提升代码的可读性</span><br>&#125;<br><br><span class="hljs-keyword">type</span> A = &#123;<br> [<span class="hljs-built_in">string</span>] : <span class="hljs-built_in">number</span><br>&#125;<br><br><span class="hljs-keyword">type</span> A = <span class="hljs-title class_">Record</span>&lt;<span class="hljs-built_in">string</span>, <span class="hljs-built_in">number</span>&gt;<br></code></pre></td></tr></table></figure><hr><h2 id="数组-对象描述"><a href="#数组-对象描述" class="headerlink" title="数组 对象描述"></a>数组 对象描述</h2><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs TypeScript"><span class="hljs-keyword">const</span> <span class="hljs-attr">arr</span>: <span class="hljs-title class_">Array</span>&lt;<span class="hljs-built_in">number</span>&gt; = [<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>]<br><br><span class="hljs-keyword">type</span> A = <span class="hljs-built_in">string</span>[]<br><span class="hljs-keyword">const</span> <span class="hljs-attr">a</span>:A = [<span class="hljs-string">&#x27;h&#x27;</span>, <span class="hljs-string">&#x27;i&#x27;</span>]<br><br><span class="hljs-keyword">type</span> A = <span class="hljs-title class_">Array</span>&lt;<span class="hljs-built_in">string</span>&gt;<br><br><span class="hljs-keyword">type</span> B = <span class="hljs-built_in">number</span>[]<br><span class="hljs-keyword">const</span> <span class="hljs-attr">b</span>:B = [<span class="hljs-number">42</span>, <span class="hljs-number">0.8</span>]<br><br><span class="hljs-keyword">type</span> B = <span class="hljs-title class_">Array</span>&lt;<span class="hljs-built_in">number</span>&gt;<br><br><span class="hljs-keyword">type</span> D = [<span class="hljs-built_in">string</span>, <span class="hljs-built_in">string</span>, <span class="hljs-built_in">string</span>]<br><span class="hljs-keyword">const</span> <span class="hljs-attr">noError</span>: D = [<span class="hljs-string">&#x27;我&#x27;</span>, <span class="hljs-string">&#x27;爱&#x27;</span>, <span class="hljs-string">&#x27;你&#x27;</span>]<br><span class="hljs-keyword">const</span> <span class="hljs-attr">error</span>: D = [<span class="hljs-string">&#x27;h&#x27;</span>, <span class="hljs-string">&#x27;i&#x27;</span>]<br><br><span class="hljs-keyword">type</span> E = [<span class="hljs-built_in">string</span>, <span class="hljs-built_in">number</span>]<br><span class="hljs-keyword">const</span> <span class="hljs-attr">e</span>:E = [<span class="hljs-string">&#x27;小明&#x27;</span>, <span class="hljs-number">100</span>]<br><br><span class="hljs-keyword">type</span> F = [<span class="hljs-built_in">string</span>[], <span class="hljs-built_in">number</span>[]]<br><span class="hljs-keyword">const</span> <span class="hljs-attr">f</span>: F = [[<span class="hljs-string">&#x27;柴&#x27;</span>,<span class="hljs-string">&#x27;米&#x27;</span>,<span class="hljs-string">&#x27;油&#x27;</span>,<span class="hljs-string">&#x27;盐&#x27;</span>], [<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>]]<br><br><span class="hljs-keyword">type</span> E = [<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>]<br><br><span class="hljs-keyword">const</span> <span class="hljs-attr">e</span>:E = [<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>]<br></code></pre></td></tr></table></figure><hr><h2 id="函数-对象描述"><a href="#函数-对象描述" class="headerlink" title="函数 对象描述"></a>函数 对象描述</h2><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs TypeScript"><span class="hljs-keyword">type</span> <span class="hljs-title class_">FnA</span> = <span class="hljs-function">(<span class="hljs-params">a: <span class="hljs-built_in">number</span>, b:<span class="hljs-built_in">number</span></span>) =&gt;</span> <span class="hljs-built_in">number</span><br><span class="hljs-keyword">const</span> <span class="hljs-attr">a</span>: <span class="hljs-title class_">FnA</span> = <span class="hljs-function">(<span class="hljs-params">x:<span class="hljs-built_in">number</span></span>)=&gt;</span>&#123;<br> <span class="hljs-keyword">return</span> <span class="hljs-number">123</span>;<br>&#125;<br><br><span class="hljs-keyword">type</span> <span class="hljs-title class_">FnReturnVoid</span> = <span class="hljs-function">() =&gt;</span> <span class="hljs-built_in">void</span><br><span class="hljs-keyword">type</span> <span class="hljs-title class_">FnReturnUndefined</span> = <span class="hljs-function">() =&gt;</span> <span class="hljs-literal">undefined</span><br><br><span class="hljs-keyword">const</span> <span class="hljs-attr">f1</span>: <span class="hljs-title class_">FnReturnVoid</span> = <span class="hljs-function">() =&gt;</span>&#123;<br>&#125;<br></code></pre></td></tr></table></figure><p><strong>建议：</strong> 实践中返回值不推荐写 null或undefined， 推荐用void</p><h3 id="使用this的函数"><a href="#使用this的函数" class="headerlink" title="使用this的函数"></a>使用this的函数</h3><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs TypeScript"><span class="hljs-keyword">type</span> <span class="hljs-title class_">Person</span> = &#123;<br> <span class="hljs-attr">name</span>:<span class="hljs-built_in">string</span><br> <span class="hljs-attr">age</span>:<span class="hljs-built_in">number</span><br> <span class="hljs-attr">sayHi</span>:<span class="hljs-title class_">FnWithThis</span><br><br>&#125;<br><span class="hljs-keyword">type</span> <span class="hljs-title class_">FnWithThis</span> = <span class="hljs-function">(<span class="hljs-params"><span class="hljs-variable language_">this</span>:Person, name: <span class="hljs-built_in">string</span></span>) =&gt;</span> <span class="hljs-built_in">void</span><br><span class="hljs-comment">// 注意：这里类型声明用了类似箭头函数的形式</span><br><br><span class="hljs-comment">// 使用this的函数必须是function的形式。</span><br><span class="hljs-keyword">const</span> <span class="hljs-attr">sayHi</span>: <span class="hljs-title class_">FnWithThis</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;<br> <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;hi&#x27;</span> + <span class="hljs-variable language_">this</span>.<span class="hljs-property">name</span>);<br>&#125;<br><br><span class="hljs-keyword">const</span> <span class="hljs-attr">x</span>:<span class="hljs-title class_">Person</span> = &#123;<br> <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;frank&#x27;</span>,<br> <span class="hljs-attr">age</span>:<span class="hljs-number">18</span>,<br> <span class="hljs-attr">sayHi</span>:sayHi<br>&#125;<br>x.<span class="hljs-title function_">sayHi</span>(<span class="hljs-string">&#x27;Jack&#x27;</span>);<br>sayHi.<span class="hljs-title function_">call</span>(x, <span class="hljs-string">&#x27;Jack&#x27;</span>);<br></code></pre></td></tr></table></figure><p>TS开发者一般使用箭头函数的形式来描述函数</p><hr><h2 id="其它-对象描述"><a href="#其它-对象描述" class="headerlink" title="其它 对象描述"></a>其它 对象描述</h2><p>使用class</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs TypeScript"><span class="hljs-keyword">const</span> <span class="hljs-attr">d</span>: <span class="hljs-title class_">Date</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>()<br><span class="hljs-keyword">const</span> <span class="hljs-attr">r</span>: <span class="hljs-title class_">RegExp</span> = <span class="hljs-regexp">/ab+c/</span><br><span class="hljs-keyword">const</span> <span class="hljs-attr">r2</span>: <span class="hljs-title class_">RegExp</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">RegExp</span>(<span class="hljs-string">&#x27;ab+c&#x27;</span>);<br><span class="hljs-keyword">const</span> <span class="hljs-attr">m</span>: <span class="hljs-title class_">Map</span>&lt;<span class="hljs-built_in">string</span>, <span class="hljs-built_in">number</span>&gt; = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Map</span>()<br><br>m.<span class="hljs-title function_">set</span>(<span class="hljs-string">&#x27;xxx&#x27;</span>, <span class="hljs-number">2</span>)<br><br><span class="hljs-keyword">const</span> <span class="hljs-attr">wm</span>: <span class="hljs-title class_">WeakMap</span>&lt;&#123;<span class="hljs-attr">name</span>:<span class="hljs-built_in">string</span>&#125;, <span class="hljs-built_in">number</span>&gt; = <span class="hljs-keyword">new</span> <span class="hljs-title class_">WeakMap</span>()<br><br><span class="hljs-keyword">type</span> A = <span class="hljs-built_in">object</span><br><span class="hljs-keyword">const</span> <span class="hljs-attr">a</span>: A =  &#123;&#125; <span class="hljs-comment">// [] // ()=&gt;void //</span><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(a)<br><br><span class="hljs-keyword">const</span> <span class="hljs-attr">s</span>:<span class="hljs-title class_">Set</span>&lt;<span class="hljs-built_in">number</span>&gt; = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Set</span>()<br><span class="hljs-keyword">const</span> <span class="hljs-attr">ws</span>: <span class="hljs-title class_">WeakSet</span>&lt;<span class="hljs-built_in">string</span>[]&gt; = <span class="hljs-keyword">new</span> <span class="hljs-title class_">WeakSet</span>()<br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>TypeScript</category>
      
    </categories>
    
    
    <tags>
      
      <tag>JavaScript</tag>
      
      <tag>TypeScript</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Web前端工程化 - 使用npm</title>
    <link href="/2023/01/08/Web%E5%89%8D%E7%AB%AF%E5%B7%A5%E7%A8%8B%E5%8C%96%20-%20%E4%BD%BF%E7%94%A8npm/"/>
    <url>/2023/01/08/Web%E5%89%8D%E7%AB%AF%E5%B7%A5%E7%A8%8B%E5%8C%96%20-%20%E4%BD%BF%E7%94%A8npm/</url>
    
    <content type="html"><![CDATA[<h2 id="帮助-help"><a href="#帮助-help" class="headerlink" title="帮助 help"></a>帮助 help</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ npm <span class="hljs-built_in">help</span> install<br>$ npm <span class="hljs-built_in">help</span> uninstall<br>$ npm <span class="hljs-built_in">help</span> update<br>...<br><br></code></pre></td></tr></table></figure><h2 id="包管理"><a href="#包管理" class="headerlink" title="包管理"></a>包管理</h2><p>npm 软件包安装位置<br>根据参数<code>[-g]</code>区分全局和局部</p><h3 id="安装软件包"><a href="#安装软件包" class="headerlink" title="安装软件包"></a>安装软件包</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm install<br><br>npm install &lt;package-name&gt;<br><br>npm install -g &lt;package-name&gt;<br>    <br>npm update<br><br>npm update &lt;package-name&gt;<br>    <br></code></pre></td></tr></table></figure><h3 id="卸载软件包"><a href="#卸载软件包" class="headerlink" title="卸载软件包"></a>卸载软件包</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm uninstall &lt;package-name&gt;<br>npm uninstall -g &lt;package-name&gt;<br><br><br></code></pre></td></tr></table></figure><h3 id="信息获取"><a href="#信息获取" class="headerlink" title="信息获取"></a>信息获取</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs bash"><br><span class="hljs-comment"># 版本信息</span><br>$ npm -v <br><br><br>$ npm list<br><br>$ npm list --depth=0<br><br>$ npm list -g <br><br>$ npm list &lt;package-name&gt;<br><br><br>$ npm view <br><br>$ npm view &lt;package-name&gt;<br><br></code></pre></td></tr></table></figure><h3 id="软件源切换-nvm"><a href="#软件源切换-nvm" class="headerlink" title="软件源切换 - nvm"></a>软件源切换 - nvm</h3><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs actionscript"><span class="hljs-keyword">package</span>.json<br></code></pre></td></tr></table></figure><h2 id="运行-package-json-script任务"><a href="#运行-package-json-script任务" class="headerlink" title="运行 package.json script任务"></a>运行 package.json script任务</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm run &lt;task-name&gt;<br></code></pre></td></tr></table></figure><p><code>package.json</code>文件支持一种用于指定命令行任务（可通过使用以下方式运行）的格式：</p><p>例如：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><br>  <span class="hljs-attr">&quot;scripts&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;start-dev&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;node lib/server-development&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;start&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;node lib/server-production&quot;</span><br>  <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm run start-dev<br><br>npm run start<br></code></pre></td></tr></table></figure><h2 id="程序执行-npx"><a href="#程序执行-npx" class="headerlink" title="程序执行 - npx"></a>程序执行 - npx</h2><p><code>npx</code>用于执行npm仓库发布的代码（程序）。</p><p>使用：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ npx command-name<br><br><span class="hljs-comment">## 使用@指定版本</span><br>$ npx command-name@version <br></code></pre></td></tr></table></figure><p><code>npx</code>先尝试在本地查找指定程序，再尝试连接网络下载并指定程序(执行完毕后自动删除).</p><p>本地npm包查找顺序：<code>./node_modules</code>, <code>path</code>变量中指定路径.</p>]]></content>
    
    
    <categories>
      
      <category>Web</category>
      
    </categories>
    
    
    <tags>
      
      <tag>npm</tag>
      
      <tag>Web</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>正则复习总结</title>
    <link href="/2023/01/08/JavaScript%E5%9F%BA%E7%A1%80%20-%20%E6%AD%A3%E5%88%99%E5%A4%8D%E4%B9%A0%E6%80%BB%E7%BB%93/"/>
    <url>/2023/01/08/JavaScript%E5%9F%BA%E7%A1%80%20-%20%E6%AD%A3%E5%88%99%E5%A4%8D%E4%B9%A0%E6%80%BB%E7%BB%93/</url>
    
    <content type="html"><![CDATA[<p><a href="https://www.liaoxuefeng.com/wiki/1022910821149312/1023021582119488">廖雪峰博客 - RegExp</a></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs javascript">\d <span class="hljs-comment">// 数字</span><br>\w <span class="hljs-comment">// 数字或字母（同时包含大小写）</span><br>\s <span class="hljs-comment">// 匹配空白字符（空格，制表等）</span><br>.  <span class="hljs-comment">// （单个,占位1）匹配任意字符</span><br></code></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs javascript">*  <span class="hljs-comment">// 任意个字符（包括0个）</span><br>+  <span class="hljs-comment">// 至少一个字符</span><br>?  <span class="hljs-comment">// 0个或1个字符</span><br></code></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs javascript">| <span class="hljs-comment">// (A|B) 匹配A或B</span><br><br>() <span class="hljs-comment">// 分组Group， 一般结合exec使用</span><br><br>[] <span class="hljs-comment">// 对指定字符集做并集处理</span><br><br>&#123;&#125; <span class="hljs-comment">// 指定出现次数, &#123;n&#125;,&#123;n,m&#125;。&#123;3&#125; 出现3次, &#123;2,5&#125; 出现2-5次</span><br></code></pre></td></tr></table></figure><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs text">^ 头部<br>$ 尾部<br></code></pre></td></tr></table></figure><p>案例:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">let</span> r1 = <span class="hljs-regexp">/\d&#123;3&#125;\s+\d&#123;3,8&#125;/</span><br><br><span class="hljs-comment">// 拆开来看</span><br>\d&#123;<span class="hljs-number">3</span>&#125;    <span class="hljs-comment">// 固定出现三个数字</span><br>\s+      <span class="hljs-comment">// 至少一个空白字符</span><br>\d&#123;<span class="hljs-number">3</span>,<span class="hljs-number">8</span>&#125;  <span class="hljs-comment">// 3-8个数字</span><br><br></code></pre></td></tr></table></figure><hr><h2 id="精确匹配"><a href="#精确匹配" class="headerlink" title="精确匹配"></a>精确匹配</h2><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs text">[0-9a-zA-Z\_] //匹配数字字母<br></code></pre></td></tr></table></figure><h2 id="匹配规则"><a href="#匹配规则" class="headerlink" title="匹配规则"></a>匹配规则</h2><h3 id="贪婪匹配"><a href="#贪婪匹配" class="headerlink" title="贪婪匹配"></a><strong>贪婪匹配</strong></h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// 即尽可能匹配更多的字符</span><br><br><span class="hljs-comment">// (\d+) 默认采用贪婪匹配, 尽可能多匹配</span><br><span class="hljs-keyword">var</span> re = <span class="hljs-regexp">/^(\d+)(0*)$/</span>;<br>re.<span class="hljs-title function_">exec</span>(<span class="hljs-string">&#x27;102300&#x27;</span>); <span class="hljs-comment">// [&#x27;102300&#x27;, &#x27;102300&#x27;, &#x27;&#x27;]</span><br><br><span class="hljs-comment">// (\d+?) 禁用贪婪匹配, 尽可能少匹配</span><br><span class="hljs-keyword">var</span> re = <span class="hljs-regexp">/^(\d+?)(0*)$/</span>;<br>re.<span class="hljs-title function_">exec</span>(<span class="hljs-string">&#x27;102300&#x27;</span>); <span class="hljs-comment">// [&#x27;102300&#x27;, &#x27;1023&#x27;, &#x27;00&#x27;]</span><br><br></code></pre></td></tr></table></figure><p>定义正则时<strong>标记</strong>：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs text"><br>i 忽略大小写<br><br>m 多行匹配<br><br>g 全局匹配 类似于vim中的搜索, 可不断匹配, 通过读取正则对象的lastIndex变量获取当前索引<br><br></code></pre></td></tr></table></figure><hr><p>注意特殊字符需转义：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs text">_ 下划线<br><br>- 横杆<br><br>\ 反斜杠 <br><br>^<br><br>$ <br><br></code></pre></td></tr></table></figure><p>常用方法：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// 字符串的split方法可以接受一个正则对象，用于分割字符串</span><br><span class="hljs-string">&#x27;a,b;; c  xx  ,  xxx&#x27;</span>.<span class="hljs-title function_">split</span>(<span class="hljs-regexp">/[\s\,\;]+/</span>)<br><span class="hljs-comment">// out: [&#x27;a&#x27;, &#x27;b&#x27;, &#x27;c&#x27;, &#x27;xx&#x27;, &#x27;xxx&#x27;]</span><br><br><br><span class="hljs-comment">// 给定字符串，判断是否满足匹配</span><br>re.<span class="hljs-property">test</span> = <span class="hljs-function">(<span class="hljs-params">str: string</span>) =&gt;</span> boolean  <br><br><br><span class="hljs-comment">// 分组，结合 () 使用</span><br><span class="hljs-keyword">var</span> re = <span class="hljs-regexp">/^(\d&#123;3&#125;)-(\d&#123;3,8&#125;)$/</span>;<br>re.<span class="hljs-title function_">exec</span>(<span class="hljs-string">&#x27;010-12345&#x27;</span>); <span class="hljs-comment">// [&#x27;010-12345&#x27;, &#x27;010&#x27;, &#x27;12345&#x27;]</span><br>re.<span class="hljs-title function_">exec</span>(<span class="hljs-string">&#x27;010 12345&#x27;</span>); <span class="hljs-comment">// null</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>JavaScript</category>
      
    </categories>
    
    
    <tags>
      
      <tag>JavaScript</tag>
      
      <tag>正则表达式</tag>
      
      <tag>RegExp</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>JavaScript 类与继承</title>
    <link href="/2023/01/08/JavaScript%E5%9F%BA%E7%A1%80%20-%20%E7%B1%BB%E4%B8%8E%E7%BB%A7%E6%89%BF/"/>
    <url>/2023/01/08/JavaScript%E5%9F%BA%E7%A1%80%20-%20%E7%B1%BB%E4%B8%8E%E7%BB%A7%E6%89%BF/</url>
    
    <content type="html"><![CDATA[<h2 id="原型链继承"><a href="#原型链继承" class="headerlink" title="原型链继承"></a>原型链继承</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs JavaScript"><br><span class="hljs-comment">// 本质 =&gt; Child.prototype.__proto__ = Parent.prototype</span><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">inherit</span>(<span class="hljs-params">Child, Parent</span>) &#123;<br>    <span class="hljs-keyword">function</span> <span class="hljs-title function_">F</span>(<span class="hljs-params"></span>)&#123;&#125;;<br>    F.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span> = <span class="hljs-title class_">Parent</span>.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>;<br>    <span class="hljs-title class_">Child</span>.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span> = <span class="hljs-keyword">new</span> <span class="hljs-title function_">F</span>();<br>    <span class="hljs-title class_">Child</span>.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>.<span class="hljs-property">constructor</span> = <span class="hljs-title class_">Child</span>; <span class="hljs-comment">//修复constructor</span><br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">Animal</span>(<span class="hljs-params">legsNumber</span>)&#123;<br>    <span class="hljs-variable language_">this</span>.<span class="hljs-property">legsNumber</span> = legsNumber;<br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">Dog</span>(<span class="hljs-params"></span>)&#123;<br>    <span class="hljs-variable language_">this</span>.<span class="hljs-property">name</span> = name;<br>    <span class="hljs-title class_">Animal</span>.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>, <span class="hljs-number">4</span>); <span class="hljs-comment">// **关键代码**</span><br>&#125;<br><br><span class="hljs-title function_">inherit</span>(<span class="hljs-title class_">Dog</span>, <span class="hljs-title class_">Animal</span>); <span class="hljs-comment">// **关键代码**</span><br><br><span class="hljs-title class_">Dog</span>.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>.<span class="hljs-property">kind</span> = <span class="hljs-string">&#x27;狗&#x27;</span><br><span class="hljs-title class_">Dog</span>.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>.<span class="hljs-property">say</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;<br>  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">`汪汪汪~ 我是<span class="hljs-subst">$&#123;<span class="hljs-variable language_">this</span>.name&#125;</span>，我有<span class="hljs-subst">$&#123;<span class="hljs-variable language_">this</span>.legsNumber&#125;</span>条腿。`</span>)<br>&#125;<br><br><span class="hljs-keyword">const</span> d1 = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Dog</span>(<span class="hljs-string">&#x27;啸天&#x27;</span>) <span class="hljs-comment">// Dog 函数就是一个类</span><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">dir</span>(d1)<br></code></pre></td></tr></table></figure><h2 id="类继承"><a href="#类继承" class="headerlink" title="类继承"></a>类继承</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs JavaScript"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Animal</span>&#123;<br>    <span class="hljs-title function_">constructor</span>(<span class="hljs-params">legsNumber</span>)&#123;<br>        <span class="hljs-variable language_">this</span>.<span class="hljs-property">legsNumber</span> = legsNumber;<br>    &#125;<br>    <span class="hljs-title function_">run</span>(<span class="hljs-params"></span>)&#123;&#125;<br>&#125;<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">Dog</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_ inherited__">Animal</span>&#123;<br>    <span class="hljs-title function_">constructor</span>(<span class="hljs-params">name</span>)&#123;<br>        <span class="hljs-variable language_">super</span>(<span class="hljs-number">4</span>);<br>        <span class="hljs-variable language_">this</span>.<span class="hljs-property">name</span> = name;<br>    &#125;<br>    <span class="hljs-title function_">say</span>(<span class="hljs-params"></span>)&#123;<br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">`汪汪汪~ 我是<span class="hljs-subst">$&#123;<span class="hljs-variable language_">this</span>.name&#125;</span>，我有<span class="hljs-subst">$&#123;<span class="hljs-variable language_">this</span>.legsNumber&#125;</span>条腿。`</span>)<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>JavaScript</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>JavaScript基础 - 防抖与节流</title>
    <link href="/2023/01/08/JavaScript%E5%9F%BA%E7%A1%80%20-%20%E9%98%B2%E6%8A%96%E4%B8%8E%E8%8A%82%E6%B5%81/"/>
    <url>/2023/01/08/JavaScript%E5%9F%BA%E7%A1%80%20-%20%E9%98%B2%E6%8A%96%E4%B8%8E%E8%8A%82%E6%B5%81/</url>
    
    <content type="html"><![CDATA[<p>意义： 提升程序执行效率, 减少计算资源的浪费, 优化用户体验。</p><h2 id="节流-throttle"><a href="#节流-throttle" class="headerlink" title="节流 throttle"></a>节流 throttle</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><br><span class="hljs-comment">// 节流 throttle </span><br><br><span class="hljs-comment">// 一段时间内，只执行一次某个操作，过了这段时间，还有操作的话，继续执行新的操作。</span><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">throttle</span>(<span class="hljs-params">fn, interval</span>) &#123;<br>  <span class="hljs-keyword">let</span> timer = <span class="hljs-literal">null</span>;<br>  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;arguments&#x27;</span>,<span class="hljs-variable language_">arguments</span>)<br>  <span class="hljs-keyword">return</span> <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;<br>    <span class="hljs-comment">// 正在计时，直接返回</span><br>    <span class="hljs-keyword">if</span> (timer) <span class="hljs-keyword">return</span>;<br><br>    <span class="hljs-comment">// 不在计时中,执行指定代码, 开始计时</span><br>    fn.<span class="hljs-title function_">apply</span>(<span class="hljs-variable language_">this</span>, <span class="hljs-variable language_">arguments</span>); <br>    <br>    <span class="hljs-comment">//备注：因为用到了arguments，所以不能使用箭头函数</span><br>    <span class="hljs-comment">// 注意理解这里的arguments， throttle返回函数时并没有执行</span><br><br>    timer = <span class="hljs-built_in">setTimeout</span>(<span class="hljs-function">() =&gt;</span> &#123;<br>      timer = <span class="hljs-literal">null</span>;<br>    &#125;, interval);<br>  &#125;;<br>&#125;<br><br><span class="hljs-comment">// boxDOM.addEventListener(&quot;drag&quot;, function (e) &#123;</span><br><span class="hljs-comment">//     console.log(arguments);</span><br><span class="hljs-comment">//   console.log(e.offsetX, e.offsetY);</span><br><span class="hljs-comment">// &#125;);</span><br><br><span class="hljs-keyword">const</span> boxDOM = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">querySelector</span>(<span class="hljs-string">&quot;.box&quot;</span>);<br>boxDOM.<span class="hljs-title function_">addEventListener</span>(<br>  <span class="hljs-string">&quot;drag&quot;</span>,<br><br>  <span class="hljs-comment">// 如果用户给我箭头函数呢？</span><br>  <span class="hljs-comment">// 参数， 只在运行时传入!!</span><br><span class="hljs-comment">//   throttle(function (e) &#123;</span><br><span class="hljs-comment">//     console.log(arguments);</span><br><span class="hljs-comment">//     console.log(e.offsetX, e.offsetY, &quot; -- &quot;, new Date().toISOString());</span><br><span class="hljs-comment">//   &#125;, 1000)</span><br><br>  <span class="hljs-title function_">throttle</span>(<span class="hljs-function">(<span class="hljs-params">e</span>) =&gt;</span> &#123;<br>    <span class="hljs-comment">// console.log(arguments); //箭头函数内无法使用</span><br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(e.<span class="hljs-property">offsetX</span>, e.<span class="hljs-property">offsetY</span>, <span class="hljs-string">&quot; -- &quot;</span>, <span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>().<span class="hljs-title function_">toISOString</span>());<br>  &#125;, <span class="hljs-number">1000</span>)<br>);<br></code></pre></td></tr></table></figure><h2 id="防抖-debounce"><a href="#防抖-debounce" class="headerlink" title="防抖 debounce"></a>防抖 debounce</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// 防抖 debounce --------------------------</span><br><br><span class="hljs-comment">// 在事件被触发n秒后再执行回调，如果在这n秒内又被触发，则重新计时。</span><br><span class="hljs-comment">// 用户输入完毕的时候，才发送一次http请求</span><br><span class="hljs-keyword">const</span> inputDOM = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&quot;hInput&quot;</span>);<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">debounce</span>(<span class="hljs-params">fn, interval</span>) &#123;<br>  <span class="hljs-keyword">let</span> timer = <span class="hljs-literal">null</span>;<br>  <span class="hljs-keyword">return</span> <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-keyword">if</span> (timer) &#123;<br>      <span class="hljs-comment">// 重置计时器</span><br>      <span class="hljs-built_in">clearTimeout</span>(timer);<br>    &#125;<br>    timer = <span class="hljs-built_in">setTimeout</span>(<span class="hljs-function">() =&gt;</span> &#123;<br>      fn.<span class="hljs-title function_">apply</span>(<span class="hljs-variable language_">this</span>, <span class="hljs-variable language_">arguments</span>);<br>    &#125;, interval);<br>  &#125;;<br>&#125;<br><br><span class="hljs-comment">// inputDOM.addEventListener(&#x27;input&#x27;, ()=&gt;&#123;</span><br><span class="hljs-comment">//     console.log(&#x27;发送搜索请求&#x27;)</span><br><span class="hljs-comment">// &#125;)</span><br><br>inputDOM.<span class="hljs-title function_">addEventListener</span>(<br>  <span class="hljs-string">&quot;input&quot;</span>,<br>  <span class="hljs-title function_">debounce</span>(<span class="hljs-function">() =&gt;</span> &#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;发送搜索请求&quot;</span>);<br>  &#125;, <span class="hljs-number">600</span>)<br>);<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>JavaScript</category>
      
    </categories>
    
    
    <tags>
      
      <tag>JavaScript 防抖 节流 throttle debounce</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>JavaScript基础 - JSON</title>
    <link href="/2023/01/08/JavaScript%E5%9F%BA%E7%A1%80%20-%20JSON/"/>
    <url>/2023/01/08/JavaScript%E5%9F%BA%E7%A1%80%20-%20JSON/</url>
    
    <content type="html"><![CDATA[<p><a href="https://www.json.org/json-en.html">Introducing JSON from json.org</a></p><p>可接受数据类型:</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs text">number<br>boolean<br>string<br>null<br>array<br>object<br></code></pre></td></tr></table></figure><p><strong>注意要点：</strong> 字符串必须用 <strong>双引号</strong>。</p><p>API：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs JavaScript"><span class="hljs-title class_">JSON</span>.<span class="hljs-title function_">stringify</span>(value, ?replacer, ?space)<br><span class="hljs-title class_">JSON</span>.<span class="hljs-title function_">parse</span>(text, ?reviver)<br></code></pre></td></tr></table></figure><hr><p>代码示例：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-meta">&#x27;use strict&#x27;</span>;<br><br><span class="hljs-keyword">let</span> <span class="hljs-title class_">Tom</span> = &#123;<br>    <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;汤姆&#x27;</span>,<br>    <span class="hljs-attr">age</span>: <span class="hljs-number">18</span>,<br>    <span class="hljs-attr">gender</span>: <span class="hljs-literal">true</span>,<br>    <span class="hljs-attr">height</span>: <span class="hljs-number">1.70</span>,<br>    <span class="hljs-attr">grade</span>: <span class="hljs-literal">null</span>,<br>    <span class="hljs-string">&#x27;middle-school&#x27;</span>: <span class="hljs-string">&#x27;\&quot;IEEE\&quot; Middle School&#x27;</span>,<br>    <span class="hljs-attr">skills</span>: [<span class="hljs-string">&#x27;JavaScript&#x27;</span>, <span class="hljs-string">&#x27;C++&#x27;</span>, <span class="hljs-string">&#x27;Python&#x27;</span>, <span class="hljs-string">&#x27;Rust&#x27;</span>]<br>&#125;;<br><br><span class="hljs-keyword">var</span> s = <span class="hljs-title class_">JSON</span>.<span class="hljs-title function_">stringify</span>(<span class="hljs-title class_">Tom</span>);<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(s);<br><br><span class="hljs-comment">// 格式化输出</span><br><span class="hljs-keyword">var</span> s = <span class="hljs-title class_">JSON</span>.<span class="hljs-title function_">stringify</span>(<span class="hljs-title class_">Tom</span>, <span class="hljs-literal">null</span>, <span class="hljs-string">&#x27;  &#x27;</span>);<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(s);<br></code></pre></td></tr></table></figure><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;name&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;汤姆&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-attr">&quot;age&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-number">18</span><span class="hljs-punctuation">,</span><span class="hljs-attr">&quot;gender&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-literal"><span class="hljs-keyword">true</span></span><span class="hljs-punctuation">,</span><span class="hljs-attr">&quot;height&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-number">1.7</span><span class="hljs-punctuation">,</span><span class="hljs-attr">&quot;grade&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-literal"><span class="hljs-keyword">null</span></span><span class="hljs-punctuation">,</span><span class="hljs-attr">&quot;middle-school&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;\&quot;IEEE\&quot; Middle School&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-attr">&quot;skills&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-punctuation">[</span><span class="hljs-string">&quot;JavaScript&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-string">&quot;C++&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-string">&quot;Python&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-string">&quot;Rust&quot;</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">&#125;</span><br><br><span class="hljs-punctuation">&#123;</span><br>  <span class="hljs-attr">&quot;name&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;汤姆&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;age&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">18</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;gender&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-literal"><span class="hljs-keyword">true</span></span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;height&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">1.7</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;grade&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-literal"><span class="hljs-keyword">null</span></span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;middle-school&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;\&quot;IEEE\&quot; Middle School&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;skills&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><br>    <span class="hljs-string">&quot;JavaScript&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-string">&quot;C++&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-string">&quot;Python&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-string">&quot;Rust&quot;</span><br>  <span class="hljs-punctuation">]</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>JavaScript</category>
      
    </categories>
    
    
    <tags>
      
      <tag>JavaScript</tag>
      
      <tag>JSON</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>JavaScript基础 - Map和Set</title>
    <link href="/2023/01/08/JavaScript%E5%9F%BA%E7%A1%80%20-%20Map%E5%92%8CSet/"/>
    <url>/2023/01/08/JavaScript%E5%9F%BA%E7%A1%80%20-%20Map%E5%92%8CSet/</url>
    
    <content type="html"><![CDATA[<p>要点： Key的值需保证唯一无重复。</p><h2 id="Map"><a href="#Map" class="headerlink" title="Map"></a>Map</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">let</span> m = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Map</span>();<br><br>m.<span class="hljs-title function_">set</span>(<span class="hljs-string">&#x27;key&#x27;</span>, <span class="hljs-number">100</span>)<br>m.<span class="hljs-title function_">has</span>(<span class="hljs-string">&#x27;key&#x27;</span>)<br>m.<span class="hljs-title function_">get</span>(<span class="hljs-string">&#x27;key&#x27;</span>)<br>m.<span class="hljs-title function_">delete</span>(<span class="hljs-string">&#x27;key&#x27;</span>)<br><br></code></pre></td></tr></table></figure><h2 id="Set"><a href="#Set" class="headerlink" title="Set"></a>Set</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">let</span> s = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Set</span>([<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">4</span>]) <span class="hljs-comment">// 初始化</span><br><br>s.<span class="hljs-title function_">add</span>(x);<br>s.<span class="hljs-title function_">delete</span>(x);<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>JavaScript</category>
      
    </categories>
    
    
    <tags>
      
      <tag>JavaScript</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>JavaScript基础 - 字符串和数组</title>
    <link href="/2023/01/08/JavaScript%E5%9F%BA%E7%A1%80%20-%20%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%92%8C%E6%95%B0%E7%BB%84/"/>
    <url>/2023/01/08/JavaScript%E5%9F%BA%E7%A1%80%20-%20%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%92%8C%E6%95%B0%E7%BB%84/</url>
    
    <content type="html"><![CDATA[<h2 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h2><p>因为字符串是常量，一般情况下字符串提供的API都不改变源变量，返回的字符串都为新建的字符串, 占用额外的内存空间。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs javascript">.<span class="hljs-property">length</span><br><br>toUpperCase<br>toLowerCase<br><br>indexOf      <span class="hljs-comment">// 搜索字符串，返回指定字符串出现的位置</span><br>substring    <span class="hljs-comment">// 返回索引区间的子串</span><br></code></pre></td></tr></table></figure><h2 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs javascript">.<span class="hljs-property">length</span><br><br>[]<br><br>indexOf<br><br><br>push / pop<br>unshift / shift<br><br>splice <br><br>sort <span class="hljs-comment">// 原地排序，不创建新数组</span><br><br>reverse<br><br><br>slice <span class="hljs-comment">// 类似字符串的substring，返回一个新数组</span><br><br>concat<br><br>join<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>JavaScript</category>
      
    </categories>
    
    
    <tags>
      
      <tag>JavaScript</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>JavaScript基础 - 杂记</title>
    <link href="/2023/01/08/JavaScript%E5%9F%BA%E7%A1%80%20-%20%E6%9D%82%E8%AE%B0/"/>
    <url>/2023/01/08/JavaScript%E5%9F%BA%E7%A1%80%20-%20%E6%9D%82%E8%AE%B0/</url>
    
    <content type="html"><![CDATA[<h2 id="标准"><a href="#标准" class="headerlink" title="标准"></a>标准</h2><p>ECMAScript 6.0  2015</p><p>ECMAScript 和 JavaScript 的关系是，前者是后者的<code>规格</code>，后者是前者的一种<code>实现</code></p><h2 id="JS三座大山"><a href="#JS三座大山" class="headerlink" title="JS三座大山"></a>JS三座大山</h2><ul><li>this</li><li>原型</li><li>AJAX</li></ul><h2 id="JS数据类型"><a href="#JS数据类型" class="headerlink" title="JS数据类型"></a>JS数据类型</h2><p>记忆口诀：四基 两空 一对象</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs text">number<br>string<br>boolean<br>symbol<br><br>bigint -- new<br><br>undefined<br>null<br><br>object (包含：数组Array，函数Function，日期Date...)<br></code></pre></td></tr></table></figure><h2 id="特殊值"><a href="#特殊值" class="headerlink" title="特殊值"></a>特殊值</h2><p>正0 与 负0 （+0，-0）都为0。</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs text">+0 === -0; // true<br>+0 === 0; // true<br>-0 === 0; // true<br></code></pre></td></tr></table></figure><p>无穷大</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs text">Infinity +Infinity -Infinity<br></code></pre></td></tr></table></figure><p>无法表示的数字</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-title class_">NaN</span> （<span class="hljs-title class_">Not</span> a <span class="hljs-title class_">Number</span>）<br>但它是一个数字<br><span class="hljs-title class_">NaN</span> == <span class="hljs-title class_">NaN</span>; <span class="hljs-comment">// false</span><br><span class="hljs-keyword">typeof</span> <span class="hljs-title class_">NaN</span>; <span class="hljs-comment">//  &#x27;number&#x27; , is funny.</span><br></code></pre></td></tr></table></figure><h2 id="bool"><a href="#bool" class="headerlink" title="bool"></a>bool</h2><p>5个<code>falsy</code>值</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs text">undefined null 0 NaN &#x27;&#x27;<br></code></pre></td></tr></table></figure><h2 id="类型转换"><a href="#类型转换" class="headerlink" title="类型转换"></a>类型转换</h2><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs text">number =&gt; string<br><br>String(n)<br>n+&#x27;&#x27;<br><br></code></pre></td></tr></table></figure><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs text">string =&gt; number<br><br>Number(s)<br>parseInt(s) <br>parseFloat(s)<br>s-0<br></code></pre></td></tr></table></figure><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs text">x =&gt; bool<br><br>Boolean(x)<br>!!x<br></code></pre></td></tr></table></figure><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs text">x=&gt;String<br><br>String(x)<br>x.toString()<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>JavaScript</category>
      
    </categories>
    
    
    <tags>
      
      <tag>JavaScript</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>JavaScript函数 - 执行时机</title>
    <link href="/2023/01/08/JavaScript%E5%87%BD%E6%95%B0%E7%9A%84%E6%89%A7%E8%A1%8C%E6%97%B6%E6%9C%BA/"/>
    <url>/2023/01/08/JavaScript%E5%87%BD%E6%95%B0%E7%9A%84%E6%89%A7%E8%A1%8C%E6%97%B6%E6%9C%BA/</url>
    
    <content type="html"><![CDATA[<p>任务队列<br>变量作用域<br>异步&amp;同步<br>闭包Closure</p><p>先看一段代码。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs JavaScript"><span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span><br><span class="hljs-keyword">for</span>(i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">6</span>; ++i)&#123;<br>    <span class="hljs-built_in">setTimeout</span>(<span class="hljs-function">()=&gt;</span>&#123;<br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(i)<br>    &#125;,<span class="hljs-number">0</span>)<br>&#125;<br></code></pre></td></tr></table></figure><p>setTimeout函数会在指定时间到达后执行给定的函数，或代码段。<br>setTimeout添加的执行任务是异步的，每执行一次就往任务队列添加一次指定任务。只有主线程上的代码全部执行完才会执行任务队列里的任务，所以当主线程for循环执行完之后 i 的值为6，这个时候再去任务队列中执行任务，i全部为6；</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs JavaScript"><span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span><br><span class="hljs-keyword">for</span>(i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">6</span>; ++i)&#123;<br>    <span class="hljs-built_in">setTimeout</span>(<span class="hljs-function">()=&gt;</span>&#123;<br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(i)<br>    &#125;,<span class="hljs-number">0</span>)<br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs">6<br>6<br>6<br>6<br>6<br></code></pre></td></tr></table></figure><p>想要输出结果为0，1，2，3，4，5。可以在代码中构建闭包Closure，将变量i的生命周期延长。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs JavaScript"><span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">6</span>; ++i)&#123;<br>    <span class="hljs-built_in">setTimeout</span>(<span class="hljs-function">()=&gt;</span>&#123;<br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(i)<br>    &#125;,<span class="hljs-number">0</span>)<br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs JavaScript"><span class="hljs-keyword">var</span> i;<br><span class="hljs-keyword">for</span>(i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">6</span>; ++i)&#123;<br>    <span class="hljs-keyword">let</span> j = i<br>    <span class="hljs-built_in">setTimeout</span>(<span class="hljs-function">()=&gt;</span>&#123;<br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(j)<br>    &#125;,<span class="hljs-number">0</span>)<br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-regexp">//</span> Output<br><span class="hljs-number">0</span><br><span class="hljs-number">1</span><br><span class="hljs-number">2</span><br><span class="hljs-number">3</span><br><span class="hljs-number">4</span><br><span class="hljs-number">5</span><br></code></pre></td></tr></table></figure><p>也可以通过函数参数传递会拷贝变量的原理。<br>修改给setTimeout的函数，并在调用前传递参数。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs JavaScript"><span class="hljs-keyword">var</span> i;<br><span class="hljs-keyword">for</span>(i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">6</span>; ++i)&#123;<br>    <span class="hljs-built_in">setTimeout</span>(<span class="hljs-function">(<span class="hljs-params">i</span>)=&gt;</span>&#123;<br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(i)<br>    &#125;,<span class="hljs-number">0</span>,i)<br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-regexp">//</span> Output<br><span class="hljs-number">0</span><br><span class="hljs-number">1</span><br><span class="hljs-number">2</span><br><span class="hljs-number">3</span><br><span class="hljs-number">4</span><br><span class="hljs-number">5</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>JavaScript</category>
      
    </categories>
    
    
    <tags>
      
      <tag>JavaScript</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>JavaScript基本语法</title>
    <link href="/2023/01/08/JavaScript%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/"/>
    <url>/2023/01/08/JavaScript%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/</url>
    
    <content type="html"><![CDATA[<h2 id="主要内容"><a href="#主要内容" class="headerlink" title="主要内容"></a>主要内容</h2><ul><li>表达式，语句</li><li>标识符</li><li>流程控制<ul><li>if-else</li><li>switch-case</li></ul></li><li>循环<ul><li>while-for</li><li>break &amp; continue</li><li>label</li></ul></li><li>注释</li></ul><h2 id="表达式-expression"><a href="#表达式-expression" class="headerlink" title="表达式 expression"></a>表达式 expression</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs JavaScript"><br><span class="hljs-number">1</span>+<span class="hljs-number">1</span><br><br><span class="hljs-title class_">String</span>(<span class="hljs-number">1234</span>)<br><br>hasValue?o.<span class="hljs-property">value</span>:<span class="hljs-string">&quot;null&quot;</span><br><br></code></pre></td></tr></table></figure><h2 id="语句-statement"><a href="#语句-statement" class="headerlink" title="语句 statement"></a>语句 statement</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs JavaScript"><br><span class="hljs-keyword">let</span> m_num = <span class="hljs-number">1024</span>*<span class="hljs-number">148</span>;<br><br><span class="hljs-keyword">return</span>;<br><br></code></pre></td></tr></table></figure><h2 id="标识符命名规则"><a href="#标识符命名规则" class="headerlink" title="标识符命名规则"></a>标识符命名规则</h2><p> <strong>可选字符</strong></p><ul><li>$</li><li>下划线( _ ) </li><li>字母 (a-zA-Z, JS底层保存标识符时实际上是才用的Unicode编码，所以理论上讲，所有的UTF-8中含有的所有字符都可以使用。)</li><li>数字(0-9) , 数字不可置于开头</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs JavaScript"><br><span class="hljs-keyword">var</span> $ = <span class="hljs-string">&#x27;&#x27;</span>;<br><span class="hljs-keyword">var</span> _ = <span class="hljs-string">&#x27;&#x27;</span>;<br><span class="hljs-keyword">var</span> b_value = <span class="hljs-literal">true</span>;<br><br><span class="hljs-keyword">let</span> $b = <span class="hljs-string">&#x27;str&#x27;</span>;<br><br><span class="hljs-keyword">const</span> num_007 = <span class="hljs-number">100</span>;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">h$_ello</span>(<span class="hljs-params"></span>)&#123;<br><br>&#125;<br><br><span class="hljs-keyword">const</span> <span class="hljs-title function_">foo123</span> = (<span class="hljs-params"></span>) =&gt; &#123;<br><br>&#125;<br><br><span class="hljs-keyword">const</span> <span class="hljs-title function_">bar456</span> = x =&gt; x * x;<br><br></code></pre></td></tr></table></figure><h2 id="流程控制"><a href="#流程控制" class="headerlink" title="流程控制"></a>流程控制</h2><h3 id="if-else-语句"><a href="#if-else-语句" class="headerlink" title="if-else 语句"></a>if-else 语句</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs JavaScript"><span class="hljs-keyword">if</span>(a&gt;<span class="hljs-number">0</span>)&#123;<br>;<br>&#125;<br><br><span class="hljs-keyword">if</span>(a===<span class="hljs-number">0</span>)&#123;<br>;<br>&#125;<span class="hljs-keyword">else</span>&#123;<br>;<br>&#125;<br><br><span class="hljs-keyword">if</span>(a == <span class="hljs-number">1</span>)&#123;<br>;<br>&#125;<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(a == <span class="hljs-number">2</span>)&#123;<br>;<br>&#125;<span class="hljs-keyword">else</span>&#123;<br>;<br>&#125;<br><br></code></pre></td></tr></table></figure><h3 id="switch-case-语句"><a href="#switch-case-语句" class="headerlink" title="switch-case 语句"></a>switch-case 语句</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs JavaScript"><br><span class="hljs-keyword">let</span> key = <span class="hljs-number">10</span>;<br><span class="hljs-keyword">let</span> value;<br><br><span class="hljs-keyword">switch</span>(k)&#123;<br><span class="hljs-keyword">case</span> <span class="hljs-number">1</span>:<br>value = <span class="hljs-string">&quot;1&quot;</span>;<br><span class="hljs-keyword">break</span>;<br><span class="hljs-keyword">case</span> <span class="hljs-number">2</span>:<br>value = <span class="hljs-string">&quot;2&quot;</span>;<br><span class="hljs-keyword">break</span>;<br><span class="hljs-keyword">case</span> <span class="hljs-number">3</span>:<br>value = <span class="hljs-string">&quot;3&quot;</span>;<br><span class="hljs-keyword">break</span>;<br><span class="hljs-keyword">case</span> <span class="hljs-string">&quot;abc&quot;</span>: <span class="hljs-comment">// 不同于c/c++ case后面可以跟字符串</span><br>value = <span class="hljs-string">&quot;def&quot;</span>;<br><span class="hljs-keyword">break</span>;<br><span class="hljs-attr">default</span>:<br>value = <span class="hljs-string">&quot;default&quot;</span>;<br>&#125;<br><br></code></pre></td></tr></table></figure><h2 id="循环"><a href="#循环" class="headerlink" title="循环"></a>循环</h2><h3 id="while-amp-for"><a href="#while-amp-for" class="headerlink" title="while &amp; for"></a>while &amp; for</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs JavaScript"><br><span class="hljs-keyword">while</span>(<span class="hljs-literal">true</span>)&#123;<br><span class="hljs-comment">//loop</span><br>&#125;<br><br><span class="hljs-keyword">do</span>&#123;<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(a);<br>++a;<br>&#125;<span class="hljs-keyword">while</span>(a &lt; <span class="hljs-number">100</span>);<br><br><span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">10</span>; ++i)&#123;<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(i);<br>&#125;<br><br><br></code></pre></td></tr></table></figure><h3 id="break-continue"><a href="#break-continue" class="headerlink" title="break continue"></a>break continue</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs JavaScript"><br><span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>;<br><span class="hljs-keyword">while</span>(<span class="hljs-literal">true</span>)&#123;<br><span class="hljs-keyword">if</span>(i === <span class="hljs-number">5</span>)&#123;<br><span class="hljs-keyword">continue</span>;<br>&#125;<br><span class="hljs-keyword">if</span>(i &gt; <span class="hljs-number">10</span>)&#123;<br><span class="hljs-keyword">break</span>;<br>&#125;<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(i);<br>++i;<br>&#125;<br><br></code></pre></td></tr></table></figure><h3 id="label"><a href="#label" class="headerlink" title="label"></a>label</h3><p>用途：搭配break，continue做循环跳转，不常见。label使用过多会导致代码不易阅读，慎用！</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs JavaScript"><br><span class="hljs-keyword">let</span> str = <span class="hljs-string">&#x27;&#x27;</span>;<br><br><span class="hljs-attr">loop1</span>:<br><span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">5</span>; i++) &#123;<br>  <span class="hljs-keyword">if</span> (i === <span class="hljs-number">1</span>) &#123;<br>    <span class="hljs-keyword">continue</span> loop1;<br>  &#125;<br>  str = str + i;<br>&#125;<br><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(str);<br><span class="hljs-comment">// expected output: &quot;0234&quot;</span><br><br></code></pre></td></tr></table></figure><h2 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs JavaScript"><br><span class="hljs-comment">//  单行</span><br><br><span class="hljs-comment">/* comment */</span>  <span class="hljs-comment">//多行，不可嵌套</span><br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>JavaScript</category>
      
    </categories>
    
    
    <tags>
      
      <tag>JavaScript</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>JavaScript基础 - Date</title>
    <link href="/2023/01/08/JavaScript%E5%9F%BA%E7%A1%80%20-%20Date/"/>
    <url>/2023/01/08/JavaScript%E5%9F%BA%E7%A1%80%20-%20Date/</url>
    
    <content type="html"><![CDATA[<p>在JavaScript中<code>Date</code>对象用于处理日期和时间。</p><p>日期对象是用<code>new Date()</code>创建的。</p><p>UTC： Coordinated Universal Time, 相对于北京时间晚了8个小时，因为北京所在时区为东8区，东+西-。</p><h2 id="基本使用"><a href="#基本使用" class="headerlink" title="基本使用"></a>基本使用</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> now = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>()<br><br>now; <span class="hljs-comment">// Wed Aug 24 2022 11:12:31 GMT+0800 (中国标准时间 CST)</span><br><br>now.<span class="hljs-title function_">getFullYear</span>();<br>now.<span class="hljs-title function_">getMonth</span>();  <span class="hljs-comment">// 0-11      注意，从0开始</span><br>now.<span class="hljs-title function_">getDate</span>();   <span class="hljs-comment">// 1-31      24， 表示24号</span><br>now.<span class="hljs-title function_">getDay</span>();    <span class="hljs-comment">// 0-6       0=周日 4=周四， 注意别跟上面一个弄混淆了</span><br><br><span class="hljs-comment">// 24小时制</span><br>now.<span class="hljs-title function_">getHours</span>();           <span class="hljs-comment">// 0-23</span><br>now.<span class="hljs-title function_">getMinutes</span>();         <span class="hljs-comment">// 0-59</span><br>now.<span class="hljs-title function_">getSeconds</span>();         <span class="hljs-comment">// 0-59</span><br>now.<span class="hljs-title function_">getMilliseconds</span>();    <span class="hljs-comment">// 0-999</span><br><br>now.<span class="hljs-title function_">getTime</span>(); <span class="hljs-comment">// 1661310751076 时间戳</span><br><br>now.<span class="hljs-title function_">toJSON</span>()   <span class="hljs-comment">// &#x27;2022-08-24T03:12:31.076Z&#x27;</span><br><br><br></code></pre></td></tr></table></figure><p>指定日期时间</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> d = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>(<span class="hljs-number">2015</span>, <span class="hljs-number">5</span>, <span class="hljs-number">19</span>, <span class="hljs-number">20</span>, <span class="hljs-number">15</span>, <span class="hljs-number">30</span>, <span class="hljs-number">123</span>);<br>d; <span class="hljs-comment">// Fri Jun 19 2015 20:15:30 GMT+0800 (CST)</span><br></code></pre></td></tr></table></figure><p>解析<code>ISO 8601</code>格式字符串</p><p><a href="https://www.w3.org/TR/NOTE-datetime">Date and Time Formats w3.org</a></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> d = <span class="hljs-title class_">Date</span>.<span class="hljs-title function_">parse</span>(<span class="hljs-string">&#x27;2015-06-24T19:49:22.875+08:00&#x27;</span>);<br>d; <span class="hljs-comment">// 1435146562875</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>JavaScript</category>
      
    </categories>
    
    
    <tags>
      
      <tag>JavaScript</tag>
      
      <tag>Date</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>HTTP学习笔记</title>
    <link href="/2023/01/08/HTTP%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <url>/2023/01/08/HTTP%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
    
    <content type="html"><![CDATA[<p>HTTP (HyperText Transfer Protocol), 中译：超文本传输协议。</p><p>HTTP基于TCP&#x2F;IP通信协议来传输数据，为Web浏览器与Web服务器之间通信而设计。</p><h2 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h2><ul><li>无连接</li><li>无状态</li><li>媒体独立</li></ul><p>备注： 所谓长短连接，说的是TCP连接的复用与否。</p><h2 id="WWW"><a href="#WWW" class="headerlink" title="WWW"></a>WWW</h2><p>WWW &#x3D; URL +  HTTP + HTML</p><p>IP:</p><ul><li>如何定位一个设备</li><li>如何封装数据报文，以同其他设备交流</li></ul><h3 id="端口"><a href="#端口" class="headerlink" title="端口"></a>端口</h3><ul><li>HTTP 80</li><li>HTTPS 443</li><li>FTP 21</li></ul><h3 id="域名"><a href="#域名" class="headerlink" title="域名"></a>域名</h3><ul><li>单一域名绑定多个IP（负载均衡）</li><li>单一IP对应多个域名（共享主机）</li></ul><h3 id="DNS"><a href="#DNS" class="headerlink" title="DNS"></a>DNS</h3><p>域名解析服务<br>工具：nslookup</p><h3 id="路径"><a href="#路径" class="headerlink" title="路径"></a>路径</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs text">查询参数<br>同一页面不同结果<br>?<br>#<br>k=v  key=value<br>&lt;https://www.baidu.com/s?wd=hello&amp;pn=20#5&gt;<br></code></pre></td></tr></table></figure><h3 id="URL示例"><a href="#URL示例" class="headerlink" title="URL示例"></a>URL示例</h3><ul><li><a href="https://www.baidu.com/s?wd=hello&amp;pn=20#5">https://www.baidu.com/s?wd=hello&amp;pn=20#5</a></li><li><a href="https://www.google.com.hk/search?q=http&amp;newwindow=1&amp;source=hp">https://www.google.com.hk/search?q=http&amp;newwindow=1&amp;source=hp</a></li></ul><p>协议 + 域名 +  路径 + 查询参数 + 锚点<br>备注：锚点不支持中文（不发送给服务器）</p><h2 id="请求-amp-响应"><a href="#请求-amp-响应" class="headerlink" title="请求 &amp; 响应"></a>请求 &amp; 响应</h2><h3 id="请求的发送"><a href="#请求的发送" class="headerlink" title="请求的发送"></a>请求的发送</h3><ol><li>Chrome</li><li>curl</li></ol><h3 id="基本概念"><a href="#基本概念" class="headerlink" title="基本概念"></a>基本概念</h3><p>UserAgent 用户代理</p><h4 id="请求"><a href="#请求" class="headerlink" title="请求"></a>请求</h4><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs text">请求动词 路径+查询参数 协议名/版本<br>Host: 域名 or IP<br>Accept: text/html<br>Content-Type: 请求体的格式<br>回车（即空行）<br>请求体<br></code></pre></td></tr></table></figure><p>细节：</p><ul><li>请求行，请求头，请求体</li><li>Get Post Put Patch Delete</li><li>RFC 2612 第五章</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">curl -v -x POST --data <span class="hljs-string">&#x27;上传内容&#x27;</span>  host:port<br></code></pre></td></tr></table></figure><h4 id="响应"><a href="#响应" class="headerlink" title="响应"></a>响应</h4><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs text">协议名/版本 状态码 状态字符串<br>Content-Type: 响应体格式<br>回车（即空行）<br>响应体（下载内容）<br></code></pre></td></tr></table></figure><p>细节：</p><ul><li>状态行，响应头，响应体</li><li>常见状态码（重要）</li><li>RFC 2612 第六章</li></ul>]]></content>
    
    
    <categories>
      
      <category>HTTP</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>JQuery 使用</title>
    <link href="/2023/01/08/JQuery%E4%BD%BF%E7%94%A8%20-%20DOM%E6%93%8D%E4%BD%9C/"/>
    <url>/2023/01/08/JQuery%E4%BD%BF%E7%94%A8%20-%20DOM%E6%93%8D%E4%BD%9C/</url>
    
    <content type="html"><![CDATA[<h1 id="1-DOM操作"><a href="#1-DOM操作" class="headerlink" title="1. DOM操作"></a>1. DOM操作</h1><p>DOM操作步骤：</p><ol><li>选择DOM</li><li>(可选)查找或过滤</li><li>操作DOM</li></ol><h2 id="选择"><a href="#选择" class="headerlink" title="选择"></a>选择</h2><p>JQuery的查找DOM语法同CSS选定DOM的语法一致，只要会了CSS就会使用JQuery的选择器。</p><h3 id="按标签查找"><a href="#按标签查找" class="headerlink" title="按标签查找"></a>按标签查找</h3><figure class="highlight arcade"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs arcade">$(<span class="hljs-string">&#x27;html&#x27;</span>)<br>$(<span class="hljs-string">&#x27;div&#x27;</span>)<br>$(<span class="hljs-string">&#x27;span&#x27;</span>)<br></code></pre></td></tr></table></figure><h3 id="按class查找"><a href="#按class查找" class="headerlink" title="按class查找"></a>按class查找</h3><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs reasonml"><span class="hljs-constructor">$(&#x27;.<span class="hljs-params">nav</span>-<span class="hljs-params">wrapper</span>&#x27;)</span><br><span class="hljs-constructor">$(&#x27;.<span class="hljs-params">image</span>&#x27;)</span><br></code></pre></td></tr></table></figure><h3 id="按ID查找"><a href="#按ID查找" class="headerlink" title="按ID查找"></a>按ID查找</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs javascript">$(<span class="hljs-string">&#x27;#app&#x27;</span>)<br>$(<span class="hljs-string">&#x27;#home&#x27;</span>)<br></code></pre></td></tr></table></figure><h3 id="按属性查找"><a href="#按属性查找" class="headerlink" title="按属性查找"></a>按属性查找</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs javascript">$(<span class="hljs-string">&#x27;[name=&quot;email&quot;]&#x27;</span>)<br>$(<span class="hljs-string">&#x27;[type=&quot;password&quot;]&#x27;</span>)<br>$(<span class="hljs-string">&#x27;[type^=&quot;pass&quot;]&#x27;</span>)<br>$(<span class="hljs-string">&#x27;[type$=&quot;word&quot;]&#x27;</span>)<br></code></pre></td></tr></table></figure><h3 id="组合查找"><a href="#组合查找" class="headerlink" title="组合查找"></a>组合查找</h3><p>标签，ID，class和属性同CSS语法一致可以组合使用。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs javascript">$(<span class="hljs-string">&#x27;p, div&#x27;</span>)<br>$(<span class="hljs-string">&#x27;p.content, div.title&#x27;</span>)<br>$(<span class="hljs-string">&#x27;form.test p input&#x27;</span>)<br>$(<span class="hljs-string">&#x27;ul.lang&gt;li.lnag-javascript&#x27;</span>)<br></code></pre></td></tr></table></figure><h2 id="查找-amp-过滤"><a href="#查找-amp-过滤" class="headerlink" title="查找 &amp; 过滤"></a>查找 &amp; 过滤</h2><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs text">.find<br>.parent<br>.next | .prev<br></code></pre></td></tr></table></figure><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs text">.filter<br>.map<br></code></pre></td></tr></table></figure><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs text">// Todo<br># 2. 动画<br><br># 3. AJAX<br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>JavaScript</category>
      
    </categories>
    
    
    <tags>
      
      <tag>JavaScript</tag>
      
      <tag>jQuery</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>JavaScript - AJAX使用与封装</title>
    <link href="/2023/01/08/JavaScript%20-%20AJAX%E4%BD%BF%E7%94%A8%E4%B8%8E%E5%B0%81%E8%A3%85/"/>
    <url>/2023/01/08/JavaScript%20-%20AJAX%E4%BD%BF%E7%94%A8%E4%B8%8E%E5%B0%81%E8%A3%85/</url>
    
    <content type="html"><![CDATA[<h2 id="前置知识"><a href="#前置知识" class="headerlink" title="前置知识"></a>前置知识</h2><p>HTTP协议基础</p><pre><code class="hljs">* 请求响应概念* response 状态码概念</code></pre><p>Web运作原理：一次HTTP请求对应一个页面。</p><h2 id="AJAX"><a href="#AJAX" class="headerlink" title="AJAX"></a>AJAX</h2><p>AJAX 是 Asynchronous JavaScript And XML 的缩写, 本意是使用JavaScript来执行异步的网络请求.</p><h2 id="使用AJAX"><a href="#使用AJAX" class="headerlink" title="使用AJAX"></a>使用AJAX</h2><pre><code class="hljs"><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> request = <span class="hljs-keyword">new</span> <span class="hljs-title class_">XMLHttpRequest</span>()<br><br>request.<span class="hljs-property">onreadystatechange</span> = <span class="hljs-function">() =&gt;</span> &#123;<br>    <span class="hljs-comment">// 接收数据成功且返回200状态码</span><br>    <span class="hljs-keyword">if</span>(request.<span class="hljs-property">readyState</span> === <span class="hljs-number">4</span> &amp;&amp; request.<span class="hljs-property">status</span> === <span class="hljs-number">200</span>)&#123;<br>        <span class="hljs-comment">// success 逻辑</span><br>    &#125;<span class="hljs-keyword">else</span>&#123;<br>        <span class="hljs-comment">// fail 逻辑</span><br>    &#125;<br>&#125;<br><br>request.<span class="hljs-title function_">open</span>(<span class="hljs-string">&#x27;GET&#x27;</span>, <span class="hljs-string">&#x27;/api/page1&#x27;</span>)<br>request.<span class="hljs-title function_">send</span>()<br></code></pre></td></tr></table></figure></code></pre><h2 id="目的"><a href="#目的" class="headerlink" title="目的"></a>目的</h2><p>通过浏览器提供的<code>HttpRequest API</code>，达到编写JavaScript代码主动请求服务器资源的目的.</p><p>在浏览器端通过AJAX可以实现动态加载HTML，XML，CSS，JavaScript, JSON.</p><h2 id="封装"><a href="#封装" class="headerlink" title="封装"></a>封装</h2><p>封装Ajax</p><pre><code class="hljs"><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> <span class="hljs-title function_">ajax</span> = (<span class="hljs-params">method, url, data, success, fail</span>)=&gt;&#123;<br>    <span class="hljs-keyword">let</span> request = <span class="hljs-keyword">new</span> <span class="hljs-title class_">XMLHttpRequest</span>()<br>    request.<span class="hljs-property">onreadystatechange</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;<br>        <span class="hljs-keyword">if</span>(request.<span class="hljs-property">readyState</span> === <span class="hljs-number">4</span>)&#123;<br>            <span class="hljs-keyword">if</span>(request.<span class="hljs-property">status</span> &gt;=<span class="hljs-number">200</span> &amp;&amp; request.<span class="hljs-property">status</span> &lt; <span class="hljs-number">300</span> || request.<span class="hljs-property">states</span> === <span class="hljs-number">304</span>)&#123;<br>                <span class="hljs-keyword">return</span> <span class="hljs-title function_">success</span>(request);<br>            &#125;<span class="hljs-keyword">else</span>&#123;<br>                <span class="hljs-keyword">return</span> <span class="hljs-title function_">fail</span>(request)<br>            &#125;<br>        &#125;<br>    &#125;;<br>    request.<span class="hljs-title function_">open</span>(method, url);<br>    request.<span class="hljs-title function_">send</span>(method === <span class="hljs-string">&#x27;POST&#x27;</span> ? <span class="hljs-title class_">JSON</span>.<span class="hljs-title function_">stringify</span>(data): <span class="hljs-literal">null</span>);<br>&#125;<br></code></pre></td></tr></table></figure></code></pre>]]></content>
    
    
    <categories>
      
      <category>JavaScript</category>
      
    </categories>
    
    
    <tags>
      
      <tag>JavaScript</tag>
      
      <tag>AJAX</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>HTML常用标签 - form表单</title>
    <link href="/2023/01/08/HTML%E5%B8%B8%E7%94%A8%E6%A0%87%E7%AD%BE%20-%20form%E8%A1%A8%E5%8D%95/"/>
    <url>/2023/01/08/HTML%E5%B8%B8%E7%94%A8%E6%A0%87%E7%AD%BE%20-%20form%E8%A1%A8%E5%8D%95/</url>
    
    <content type="html"><![CDATA[<h2 id="总览"><a href="#总览" class="headerlink" title="总览"></a>总览</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">form</span> <span class="hljs-attr">method</span>=<span class="hljs-string">&quot;post&quot;</span> <span class="hljs-attr">action</span>=<span class="hljs-string">&quot;save.php&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">for</span>=<span class="hljs-string">&quot;username&quot;</span>&gt;</span>用户名:<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span>  <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;username&quot;</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;username&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;&quot;</span> /&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">for</span>=<span class="hljs-string">&quot;pass&quot;</span>&gt;</span>密码:<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;password&quot;</span>  <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;pass&quot;</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;pass&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;&quot;</span> /&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;submit&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;确定&quot;</span>  <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;submit&quot;</span> /&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;reset&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;重置&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;reset&quot;</span> /&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">form</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="form标签"><a href="#form标签" class="headerlink" title="form标签"></a>form标签</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs HTML"><span class="hljs-tag">&lt;<span class="hljs-name">form</span> <span class="hljs-attr">method</span>=<span class="hljs-string">&quot;传送方式&quot;</span> <span class="hljs-attr">action</span>=<span class="hljs-string">&quot;服务器文件&quot;</span>&gt;</span><br></code></pre></td></tr></table></figure><ol><li><code>&lt;form&gt;</code> ：<code>&lt;form&gt;</code>标签是成对出现的，以<code>&lt;form&gt;</code>开始，以<code>&lt;/form&gt;</code>结束。</li><li><code>action</code> ：浏览者输入的数据被传送到的地方,比如一个PHP页面(save.php)。</li><li><code>method</code> ： 数据传送的方式（<code>get</code>&#x2F;<code>post</code>）。</li></ol><h3 id="label标签"><a href="#label标签" class="headerlink" title="label标签"></a>label标签</h3><p>label标签不会向用户呈现任何特殊效果，它的作用是为鼠标用户改进了可用性。如果你在 label 标签内点击文本，就会触发此控件。就是说，当用户单击选中该label标签时，浏览器就会自动将焦点转到和标签相关的表单控件上（就自动选中和该label标签相关连的表单控件上）。</p><p>语法：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs HTML"><span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">for</span>=<span class="hljs-string">&quot;控件id名称&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span><br></code></pre></td></tr></table></figure><p><strong>注意：</strong> 标签的 for 属性中的值应当与相关控件的 id 属性值一定要相同。</p><h3 id="textarea文本域"><a href="#textarea文本域" class="headerlink" title="textarea文本域"></a>textarea文本域</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs HTML"><span class="hljs-tag">&lt;<span class="hljs-name">textarea</span>  <span class="hljs-attr">rows</span>=<span class="hljs-string">&quot;行数&quot;</span> <span class="hljs-attr">cols</span>=<span class="hljs-string">&quot;列数&quot;</span>&gt;</span>文本<span class="hljs-tag">&lt;/<span class="hljs-name">textarea</span>&gt;</span><br></code></pre></td></tr></table></figure><ol><li><code>&lt;textarea&gt;</code>标签是成对出现的，以<code>&lt;textarea&gt;</code>开始，以<code>&lt;/textarea&gt;</code>结束。</li><li>cols ：多行输入域的列数。</li><li>rows ：多行输入域的行数。</li><li>在<code>&lt;textarea&gt;&lt;/textarea&gt;</code>标签之间可以输入默认值。</li></ol><h3 id="input标签"><a href="#input标签" class="headerlink" title="input标签"></a>input标签</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs HTML"><span class="hljs-tag">&lt;<span class="hljs-name">form</span>&gt;</span><br>   <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/password&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;名称&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;文本&quot;</span> /&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">form</span>&gt;</span><br></code></pre></td></tr></table></figure><ol><li>type：<br> 当type&#x3D;”text”时，输入框为文本输入框;<br> 当type&#x3D;”password”时, 输入框为密码输入框。</li><li>name：为文本框命名，以备后台程序ASP 、PHP使用。</li><li>value：为文本输入框设置默认值。(一般起到提示作用)</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs HTML"><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;submit&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;提交&quot;</span>&gt;</span><br></code></pre></td></tr></table></figure><p>type：只有当type值设置为submit时，按钮才有提交作用<br>value：按钮上显示的文字</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs HTML"><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;reset&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;重置&quot;</span>&gt;</span><br></code></pre></td></tr></table></figure><p>type：只有当type值设置为reset时，按钮才有重置作用<br>value：按钮上显示的文字</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs HTML"><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;radio/checkbox&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;值&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;名称&quot;</span> <span class="hljs-attr">checked</span>=<span class="hljs-string">&quot;checked&quot;</span>/&gt;</span><br></code></pre></td></tr></table></figure><ol><li>type:<ul><li>当 type&#x3D;”radio” 时，控件为单选框</li><li>当 type&#x3D;”checkbox” 时，控件为复选框</li></ul></li><li>value：提交数据到服务器的值（后台程序PHP使用）</li><li>name：为控件命名，以备后台程序 ASP、PHP 使用</li><li>checked：当设置 checked&#x3D;”checked” 时，该选项被默认选中</li></ol><h3 id="select下拉列表框"><a href="#select下拉列表框" class="headerlink" title="select下拉列表框"></a>select下拉列表框</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs HTML"><span class="hljs-tag">&lt;<span class="hljs-name">select</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">option</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;看书&quot;</span>&gt;</span>看书---这是显示的值<span class="hljs-tag">&lt;/<span class="hljs-name">option</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">option</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;旅游&quot;</span> <span class="hljs-attr">selected</span>=<span class="hljs-string">&quot;selected&quot;</span>&gt;</span>旅游<span class="hljs-tag">&lt;/<span class="hljs-name">option</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">option</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;运动&quot;</span>&gt;</span>运动<span class="hljs-tag">&lt;/<span class="hljs-name">option</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">option</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;购物&quot;</span>&gt;</span>购物<span class="hljs-tag">&lt;/<span class="hljs-name">option</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">select</span>&gt;</span><br></code></pre></td></tr></table></figure><ol><li>value： 向服务器提交的值</li><li>selected&#x3D;”selected”：</li></ol><p>设置selected&#x3D;”selected”属性，则该选项就被默认选中。<br>另外，在<code>&lt;select&gt;</code>标签中设置multiple&#x3D;”multiple”属性，就可以实现多选功能，在 windows 操作系统下，进行多选时按下Ctrl键同时进行单击（在 Mac下使用 Command +单击），可以选择多个选项。</p>]]></content>
    
    
    <categories>
      
      <category>HTML</category>
      
    </categories>
    
    
    <tags>
      
      <tag>HTML 表单</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>DOM事件与事件委托</title>
    <link href="/2023/01/08/DOM%E4%BA%8B%E4%BB%B6%E4%B8%8E%E4%BA%8B%E4%BB%B6%E5%A7%94%E6%89%98/"/>
    <url>/2023/01/08/DOM%E4%BA%8B%E4%BB%B6%E4%B8%8E%E4%BA%8B%E4%BB%B6%E5%A7%94%E6%89%98/</url>
    
    <content type="html"><![CDATA[<h2 id="事件监听类型之捕获与冒泡"><a href="#事件监听类型之捕获与冒泡" class="headerlink" title="事件监听类型之捕获与冒泡"></a>事件监听类型之捕获与冒泡</h2><p>执行顺序：先捕获后冒泡</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs JavaScript"><br><span class="hljs-comment">// 捕获 父-&gt;子</span><br>btn1.<span class="hljs-title function_">addEventListener</span>(<span class="hljs-string">&#x27;click&#x27;</span>, fn, <span class="hljs-literal">true</span>)<br><br><span class="hljs-comment">// 冒泡 子-&gt;父</span><br>btn1.<span class="hljs-title function_">addEventListener</span>(<span class="hljs-string">&#x27;click&#x27;</span>, fn)<br>btn1.<span class="hljs-title function_">addEventListener</span>(<span class="hljs-string">&#x27;click&#x27;</span>, fn, <span class="hljs-literal">false</span>)<br><br></code></pre></td></tr></table></figure><p><strong>特例</strong>：单一元素同时添加捕获与冒泡类型的事件监听函数，函数执行顺序由JavaScript程序执行顺序决定。</p><h2 id="阻止冒泡"><a href="#阻止冒泡" class="headerlink" title="阻止冒泡"></a>阻止冒泡</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs JavaScript"><br>e.<span class="hljs-title function_">stopPropagation</span>()<br><br></code></pre></td></tr></table></figure><h2 id="自定义事件"><a href="#自定义事件" class="headerlink" title="自定义事件"></a>自定义事件</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs JavaScript"><span class="hljs-keyword">new</span> <span class="hljs-title class_">CustomEvent</span>(<span class="hljs-string">&#x27;eName&#x27;</span>, &#123;<br>    <span class="hljs-attr">detail</span>:&#123;<span class="hljs-attr">hello</span>:<span class="hljs-string">&#x27;world&#x27;</span>&#125;, <br>    <span class="hljs-attr">bubbles</span>:<span class="hljs-literal">true</span>, <br>    <span class="hljs-attr">cancelable</span>:<span class="hljs-literal">false</span><br>&#125;)<br><br>element.<span class="hljs-title function_">dispatchEvent</span>(event)<br></code></pre></td></tr></table></figure><h2 id="事件委托"><a href="#事件委托" class="headerlink" title="事件委托"></a>事件委托</h2><p>在父元素上添加事件监听，而非在（多个）子元素上添加事件监听。<br>父元素可用<code>e.target</code>获得触发事件监听的子元素.</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs JavaScript"><br></code></pre></td></tr></table></figure><p>优点:<br>    1. 节省内存<br>    2. 监听动态生成的元素</p><h2 id="附录"><a href="#附录" class="headerlink" title="附录"></a>附录</h2><p><strong>备注</strong>：<br>JavaScript原生不支持事件,DOM事件不同于JavaScript事件.</p>]]></content>
    
    
    <categories>
      
      <category>JavaScript</category>
      
    </categories>
    
    
    <tags>
      
      <tag>DOM</tag>
      
      <tag>JavaScript</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>HTML常用标签 - a，img，table</title>
    <link href="/2023/01/08/HTML%E5%B8%B8%E7%94%A8%E6%A0%87%E7%AD%BE%20-%20a%EF%BC%8Cimg%EF%BC%8Ctable/"/>
    <url>/2023/01/08/HTML%E5%B8%B8%E7%94%A8%E6%A0%87%E7%AD%BE%20-%20a%EF%BC%8Cimg%EF%BC%8Ctable/</url>
    
    <content type="html"><![CDATA[<h2 id="table-标签"><a href="#table-标签" class="headerlink" title="table 标签"></a>table 标签</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs HTML"><span class="hljs-tag">&lt;<span class="hljs-name">table</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">thead</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">tr</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">th</span>&gt;</span>Header content 1<span class="hljs-tag">&lt;/<span class="hljs-name">th</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">th</span>&gt;</span>Header content 2<span class="hljs-tag">&lt;/<span class="hljs-name">th</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">tr</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">thead</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">tbody</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">tr</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>Body content 1<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>Body content 2<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">tr</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">tbody</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">tfoot</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">tr</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>Footer content 1<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>Footer content 2<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">tr</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">tfoot</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">table</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">table</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">thead</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">tr</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">th</span> <span class="hljs-attr">colspan</span>=<span class="hljs-string">&quot;2&quot;</span>&gt;</span>The table header<span class="hljs-tag">&lt;/<span class="hljs-name">th</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">tr</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">thead</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">tbody</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">tr</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>The table body<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>with two columns<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">tr</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">tbody</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">table</span>&gt;</span><br><br></code></pre></td></tr></table></figure><h2 id="标签属性"><a href="#标签属性" class="headerlink" title="标签属性"></a>标签属性</h2><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs text">cellspacing border width height<br>colspan rowspan<br></code></pre></td></tr></table></figure><p>table标签包含三个子标签:</p><ol><li>thead 表头</li><li>tbody 表体</li><li>tfoot 表单页脚</li></ol><p><strong>解释:</strong><br><code>&lt;tbody&gt;</code>…<code>&lt;/tbody&gt;</code>：如果不加<code>&lt;thead&gt;</code> <code>&lt;tbody&gt;</code> <code>&lt;tfoot&gt;</code> , table表格加载完后才显示。加上这些表格结构， tbody包含行的内容下载完优先显示，不必等待表格结束后在显示，同时如果表格很长，用tbody分段，可以一部分一部分地显示。（通俗理解table 可以按结构一块块的显示，不在等整个表格加载完后显示。）</p><p>三个子标签中又可以包含：<br>    tr : 一个tr表示一行<br>    tr中可以包含 th 或 td：th表示表头&#x2F;强调，td表示普通内容</p><hr><h2 id="a-标签"><a href="#a-标签" class="headerlink" title="a 标签"></a>a 标签</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs HTML"><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;目标网址&quot;</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;鼠标滑过显示的文本&quot;</span>&gt;</span>链接显示的文本<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;目标网址&quot;</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;鼠标滑过显示的文本&quot;</span>&gt;</span>链接显示的文本<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;https://www.baidu.com/index.php?id=10&quot;</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;baidu&quot;</span>&gt;</span>百度<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br></code></pre></td></tr></table></figure><p>常用属性：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs text">title<br>href<br>img<br>target<br>    _blank  //新窗口<br>    _self  //本窗口<br>    _parent //父窗口<br>    _top //顶窗口<br></code></pre></td></tr></table></figure><h2 id="img-标签"><a href="#img-标签" class="headerlink" title="img 标签"></a>img 标签</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs HTML"><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;/home/raymond/pictures/apple.jpg&quot;</span> <span class="hljs-attr">alt</span>=<span class="hljs-string">&quot;图片无法显示时显示的文字&quot;</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;光标移至图片时显示的描述&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;/root/test.png&quot;</span> <span class="hljs-attr">width</span>=<span class="hljs-string">&#x27;100px&#x27;</span> <span class="hljs-attr">height</span>=<span class="hljs-string">&#x27;100px&#x27;</span>&gt;</span><br></code></pre></td></tr></table></figure><ol><li>src：标识图像的位置；</li><li>alt：指定图像的描述性文本，当图像不可见时（下载不成功时），可看到该属性指定的文本；</li><li>title：提供在图像可见时对图像的描述(鼠标滑过图片时显示的文本)；</li><li>图像可以是GIF，PNG，JPEG格式的图像文件。</li></ol><h2 id="URL统一资源定位符"><a href="#URL统一资源定位符" class="headerlink" title="URL统一资源定位符"></a>URL统一资源定位符</h2><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs text">http 协议<br>https 协议<br>www.baidu.com 域名<br>index.php 脚本文件<br>id=10 脚本参数<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>HTML</category>
      
    </categories>
    
    
    <tags>
      
      <tag>HTML a img table 常用标签</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>DOM编程</title>
    <link href="/2023/01/08/DOM%E7%BC%96%E7%A8%8B/"/>
    <url>/2023/01/08/DOM%E7%BC%96%E7%A8%8B/</url>
    
    <content type="html"><![CDATA[<h1 id="DOM节点介绍"><a href="#DOM节点介绍" class="headerlink" title="DOM节点介绍"></a>DOM节点介绍</h1><h2 id="Node-VS-Element"><a href="#Node-VS-Element" class="headerlink" title="Node VS Element ?"></a>Node VS Element ?</h2><p>Node的类型有多种，其中包含节点(Element)，文本，注释。</p><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/API/Node/nodeType">MDN NodeType</a></p><h1 id="DOM对象的增删改查"><a href="#DOM对象的增删改查" class="headerlink" title="DOM对象的增删改查"></a>DOM对象的增删改查</h1><h1 id="选择DOM对象-查询，选定DOM对象"><a href="#选择DOM对象-查询，选定DOM对象" class="headerlink" title="选择DOM对象(查询，选定DOM对象)"></a>选择DOM对象(查询，选定DOM对象)</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs JavaScript"><br><span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>()         <span class="hljs-comment">// 返回唯一DOM节点</span><br><br><span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementsByTagName</span>()   <span class="hljs-comment">// 返回一组DOM节点</span><br><span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementsByClassName</span>() <span class="hljs-comment">// 返回一组DOM节点</span><br><br><span class="hljs-variable language_">document</span>.<span class="hljs-title function_">querySelector</span>()          <span class="hljs-comment">// 返回一个DOM节点</span><br><span class="hljs-variable language_">document</span>.<span class="hljs-title function_">querySelectorAll</span>()       <span class="hljs-comment">// 返回一组DOM节点</span><br><br></code></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs JavaScript"><br><span class="hljs-comment">// 返回ID为&#x27;first-div&#x27;的节点：</span><br><span class="hljs-keyword">var</span> div1 = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&#x27;first-div&#x27;</span>);<br><br><span class="hljs-comment">// 先定位ID为&#x27;main-table&#x27;的节点，再返回其内部所有tr节点：</span><br><span class="hljs-keyword">var</span> trs = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&#x27;main-table&#x27;</span>).<span class="hljs-title function_">getElementsByTagName</span>(<span class="hljs-string">&#x27;tr&#x27;</span>);<br><br><span class="hljs-comment">// 先定位ID为&#x27;test-div&#x27;的节点，再返回其内部所有class包含red的节点：</span><br><span class="hljs-keyword">var</span> reds = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&#x27;test-div&#x27;</span>).<span class="hljs-title function_">getElementsByClassName</span>(<span class="hljs-string">&#x27;red&#x27;</span>);<br><br><span class="hljs-comment">// 获取节点test下的所有直属子节点:</span><br><span class="hljs-keyword">var</span> cs = test.<span class="hljs-property">children</span>;<br><br><span class="hljs-comment">// 获取节点test下第一个、最后一个子节点：</span><br><span class="hljs-keyword">var</span> first = test.<span class="hljs-property">firstElementChild</span>;<br><span class="hljs-keyword">var</span> last = test.<span class="hljs-property">lastElementChild</span>;<br><br><span class="hljs-comment">// 获取页面上第一个类为hide的节点</span><br><span class="hljs-keyword">var</span> el = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">querySelector</span>(<span class="hljs-string">&#x27;.hide&#x27;</span>);<br><br><span class="hljs-comment">// 获取页面上ID为main-table的节点</span><br><span class="hljs-keyword">var</span> el = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">querySelector</span>(<span class="hljs-string">&#x27;#main-table&#x27;</span>);<br><br><span class="hljs-comment">// 获取带user-panel, main类的div标签下,含有name属性为&#x27;login&#x27;的input节点</span><br><span class="hljs-keyword">var</span> el = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">querySelector</span>(<span class="hljs-string">&quot;div.user-panel.main input[name=&#x27;login&#x27;]&quot;</span>);<br><br></code></pre></td></tr></table></figure><h3 id="特定元素获取"><a href="#特定元素获取" class="headerlink" title="特定元素获取"></a>特定元素获取</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs JavaScript"><span class="hljs-variable language_">document</span>.<span class="hljs-property">documentElement</span> <span class="hljs-comment">// html</span><br><span class="hljs-variable language_">document</span>.<span class="hljs-property">head</span>            <span class="hljs-comment">// head</span><br><span class="hljs-variable language_">document</span>.<span class="hljs-property">body</span>            <span class="hljs-comment">// body</span><br><span class="hljs-variable language_">document</span>.<span class="hljs-property">all</span>             <span class="hljs-comment">// all 所有元素, 另, falsy值 document.all?true:false ==&gt; false</span><br><br></code></pre></td></tr></table></figure><h3 id="节点相对对象选取"><a href="#节点相对对象选取" class="headerlink" title="节点相对对象选取"></a>节点相对对象选取</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs JavaScript"><span class="hljs-comment">// 父节点</span><br>node.<span class="hljs-property">parentNode</span><br>node.<span class="hljs-property">parentElement</span><br><br><span class="hljs-comment">// 父节点的父节点（爷( •̀ ω •́ )y）</span><br>node.<span class="hljs-property">parentNode</span>.<span class="hljs-property">parentNode</span><br><br><span class="hljs-comment">// 兄弟姐妹(们)</span><br>node.<span class="hljs-property">parentNode</span>.<span class="hljs-property">childNodes</span><br>node.<span class="hljs-property">parentNode</span>.<span class="hljs-property">children</span><br><br>node.<span class="hljs-property">previousSibling</span> <span class="hljs-comment">// 上一个兄弟姐妹(们)</span><br>node.<span class="hljs-property">nextSibling</span>     <span class="hljs-comment">// 下一个兄弟姐妹(们)</span><br><br><span class="hljs-comment">// 子节点(们)</span><br>node.<span class="hljs-property">childNodes</span><br>node.<span class="hljs-property">children</span><br><br>node.<span class="hljs-property">firstChild</span> <span class="hljs-comment">// 老大</span><br>node.<span class="hljs-property">lastChild</span>  <span class="hljs-comment">// 老幺</span><br><br></code></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs JavaScript"><br><span class="hljs-comment">/* 遍历指定node及其子元素 */</span><br>travel = <span class="hljs-function">(<span class="hljs-params">node, fn</span>) =&gt;</span> &#123;<br>    <span class="hljs-title function_">fn</span>(node)<br>    <span class="hljs-keyword">if</span>(node.<span class="hljs-property">children</span>)&#123;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>; i &lt; node.<span class="hljs-property">children</span>.<span class="hljs-property">length</span>; i++)&#123;<br>            <span class="hljs-title function_">travel</span>(node.<span class="hljs-property">children</span>[i], fn)<br>        &#125;<br>    &#125;<br>&#125;<br><span class="hljs-title function_">travel</span>(div1, <span class="hljs-function">(<span class="hljs-params">node</span>) =&gt;</span> <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(node))<br><br></code></pre></td></tr></table></figure><h2 id="更新DOM（内容增加，节点修改）"><a href="#更新DOM（内容增加，节点修改）" class="headerlink" title="更新DOM（内容增加，节点修改）"></a>更新DOM（内容增加，节点修改）</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs JavaScript"><br><span class="hljs-keyword">let</span> p = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&#x27;p-id&#x27;</span>);<br><br>p.<span class="hljs-property">innerHTML</span> = <span class="hljs-string">&#x27;ABC&#x27;</span>;<br>p.<span class="hljs-property">innerHTML</span> = <span class="hljs-string">&#x27;ABC &lt;span style=&quot;color:red&quot;&gt;&lt;/span&gt;XYZ&#x27;</span>;<br><br>p.<span class="hljs-property">innerText</span> = <span class="hljs-string">&#x27;Hello DOM&#x27;</span>;<br>p.<span class="hljs-property">innerText</span> = <span class="hljs-string">&#x27;&lt;script&gt;alert(&#x27;</span><span class="hljs-title class_">Hi</span>!<span class="hljs-string">&#x27;)&lt;/script&gt;&#x27;</span>;<br>p.<span class="hljs-property">textContent</span> = <span class="hljs-string">&#x27;&#x27;</span>;<br>p.<span class="hljs-property">textContent</span> = <span class="hljs-string">&#x27;&#x27;</span>;<br><br>p.<span class="hljs-property">style</span>.<span class="hljs-property">color</span> = <span class="hljs-string">&#x27;#01234&#x27;</span>;<br>p.<span class="hljs-property">style</span>.<span class="hljs-property">fontSize</span> = <span class="hljs-string">&#x27;1.25em&#x27;</span>;<br>p.<span class="hljs-property">style</span>.<span class="hljs-property">paddingTop</span> = <span class="hljs-string">&#x27;5px&#x27;</span>;<br><br></code></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs JavaScript"><br><span class="hljs-keyword">let</span> d = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">createElement</span>(<span class="hljs-string">&#x27;style&#x27;</span>);<br><br>d.<span class="hljs-title function_">setAttribute</span>(<span class="hljs-string">&#x27;type&#x27;</span>, <span class="hljs-string">&#x27;text/css&#x27;</span>);<br><br>d.<span class="hljs-property">innerHTML</span> = <span class="hljs-string">&#x27;p &#123;color: red&#125;&#x27;</span>;<br><br><span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementsByTagName</span>(<span class="hljs-string">&#x27;head&#x27;</span>)[<span class="hljs-number">0</span>].<span class="hljs-title function_">appendChild</span>(d);<br></code></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs JavaScript"><span class="hljs-keyword">let</span> list = doculment.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&#x27;list&#x27;</span>);<br><span class="hljs-keyword">let</span> ref = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&#x27;python&#x27;</span>);<br><span class="hljs-keyword">let</span> haskell = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">createElement</span>(<span class="hljs-string">&#x27;p&#x27;</span>);<br><br>haskell.<span class="hljs-property">id</span> = <span class="hljs-string">&#x27;haskell&#x27;</span>;<br>haskell.<span class="hljs-property">innerText</span> = <span class="hljs-string">&#x27;Haskell&#x27;</span>;<br>list.<span class="hljs-title function_">insertBefore</span>(haskell, ref);<br><br></code></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs JavaScript"><span class="hljs-keyword">var</span> i, c, <br>    list = doculment.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&#x27;list&#x27;</span>);<br><br><span class="hljs-keyword">for</span>(i = <span class="hljs-number">0</span>; i&lt; list.<span class="hljs-property">children</span>.<span class="hljs-property">length</span>;i++)&#123;<br>    c = list.<span class="hljs-property">children</span>[i];<br>&#125;<br><br></code></pre></td></tr></table></figure><h3 id="节点创建"><a href="#节点创建" class="headerlink" title="节点创建"></a>节点创建</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs JavaScript"><br><span class="hljs-variable language_">document</span>.<span class="hljs-title function_">createElement</span>(<span class="hljs-string">&#x27;div&#x27;</span>)<br><span class="hljs-variable language_">document</span>.<span class="hljs-title function_">createElement</span>(<span class="hljs-string">&#x27;style&#x27;</span>)<br><span class="hljs-variable language_">document</span>.<span class="hljs-title function_">createElement</span>(<span class="hljs-string">&#x27;script&#x27;</span>)<br><br><span class="hljs-variable language_">document</span>.<span class="hljs-title function_">createTextNode</span>(<span class="hljs-string">&#x27;Hello&#x27;</span>)<br><br>div_1.<span class="hljs-title function_">appendChild</span>(<span class="hljs-variable constant_">TEXT_NODE</span>)<br>div_1.<span class="hljs-property">innerText</span> = <span class="hljs-string">&#x27;Hello World&#x27;</span><br><br></code></pre></td></tr></table></figure><h1 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h1><p>appendChild(NODE)&#x2F;&#x2F; 改变NODE所在位置，页面不会新增NODE</p><h2 id="删除DOM"><a href="#删除DOM" class="headerlink" title="删除DOM"></a>删除DOM</h2><p>旧方法：</p><ol><li>获取节点本身, 获取父节点</li><li>调用父节点<code>removeChild</code>删除节点本身<br>新方法：</li><li>获取节点本身</li><li>节点本身调用<code>remove()</code>删除自身</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs JavaScript"><br><span class="hljs-comment">// 旧方法</span><br><br><span class="hljs-keyword">const</span> parent = self.<span class="hljs-property">parentElement</span>;<br><span class="hljs-keyword">let</span> self = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">querySelector</span>(<span class="hljs-string">&#x27;#target&#x27;</span>);<br><br><span class="hljs-keyword">let</span> removed = parent.<span class="hljs-title function_">removeChild</span>(self);<br><br>removed === self; <span class="hljs-comment">// true</span><br><br><span class="hljs-comment">// 新方法</span><br><span class="hljs-keyword">let</span> self = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">querySelector</span>(<span class="hljs-string">&#x27;#target&#x27;</span>);<br><span class="hljs-keyword">let</span> removed = self.<span class="hljs-title function_">remove</span>()<br>removed === self; <span class="hljs-comment">// true</span><br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>JavaScript</category>
      
    </categories>
    
    
    <tags>
      
      <tag>DOM</tag>
      
      <tag>JavaScript</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>什么是BFC？</title>
    <link href="/2023/01/08/CSS%E5%9F%BA%E7%A1%80%20-%20%E4%BB%80%E4%B9%88%E6%98%AFBFC%EF%BC%9F/"/>
    <url>/2023/01/08/CSS%E5%9F%BA%E7%A1%80%20-%20%E4%BB%80%E4%B9%88%E6%98%AFBFC%EF%BC%9F/</url>
    
    <content type="html"><![CDATA[<p>BFC(Block Formatting Content) 。 中译： 块级格式化上下文 。</p><p>可以认为是元素的一种特性，仅需了解其触发方式和触发后元素展现的特性即可。</p><p>注意： 下文将触发了 BFC 特性的元素叫 BFC 容器。</p><hr><p><strong>触发方式列举如下：</strong></p><ul><li><p>浮动元素（元素的 float 不是 none）</p></li><li><p>绝对定位元素（元素的 position 为 absolute 或 fixed）</p></li><li><p>行内块 inline block 元素</p></li><li><p>overflow 值不为 visible 的块元素</p></li><li><p>弹性元素（display 为 flex 或 inline-flex 元素的直接子元素, 或添加 display: flow-root）</p></li></ul><p>热知识: html 元素默认触发 BFC。</p><hr><p><strong>触发特性后：</strong></p><ul><li><p>元素将是页面中的一块<strong>独立渲染区域</strong>。</p></li><li><p>区域内元素布局<strong>不会影响外部</strong>。</p></li><li><p><strong>同一个 BFC 容器 下外边距会发生折叠</strong>, <strong>想要避免外边距的重叠，可以将其放在不同的 BFC 容器中。</strong></p></li><li><p><strong>BFC 可以包含浮动的元素（清除浮动）</strong></p></li><li><p><strong>BFC 容器 可以阻止元素被浮动元素覆盖</strong></p></li></ul><hr><h2 id="MDN-BFC触发"><a href="#MDN-BFC触发" class="headerlink" title="MDN BFC触发"></a>MDN BFC触发</h2><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/Guide/CSS/Block_formatting_context">MDN BFC 块级格式化上下文</a></p>]]></content>
    
    
    <categories>
      
      <category>CSS</category>
      
    </categories>
    
    
    <tags>
      
      <tag>CSS 基础</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>CSS 如何实现垂直居中？</title>
    <link href="/2023/01/08/CSS%E5%9F%BA%E7%A1%80%20-%20%E5%A6%82%E4%BD%95%E5%AE%9E%E7%8E%B0%E5%9E%82%E7%9B%B4%E5%B1%85%E4%B8%AD%EF%BC%9F/"/>
    <url>/2023/01/08/CSS%E5%9F%BA%E7%A1%80%20-%20%E5%A6%82%E4%BD%95%E5%AE%9E%E7%8E%B0%E5%9E%82%E7%9B%B4%E5%B1%85%E4%B8%AD%EF%BC%9F/</url>
    
    <content type="html"><![CDATA[<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs HTML"><span class="hljs-comment">&lt;!-- 示例html结构 --&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;parent&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;child&quot;</span>&gt;</span><br>         Lorem ipsum dolor sit amet, consectetur adipisicing elit. Facilis iusto praesentium dolorem qui, accusamus labore fugit nulla quibusdam eius explicabo minima libero, obcaecati, odio rerum quae inventore vel quo totam!<br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></figure><hr><h2 id="父元素-height-属性未写"><a href="#父元素-height-属性未写" class="headerlink" title="父元素 height 属性未写"></a><strong>父元素 <code>height</code> 属性未写</strong></h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs CSS"><span class="hljs-comment">/* 重点：父元素上下添加内边距即可 */</span><br><span class="hljs-selector-class">.parent</span>&#123;<br>    <span class="hljs-attribute">padding</span>: <span class="hljs-number">50px</span> <span class="hljs-number">0</span>;<br>&#125;<br><br><span class="hljs-selector-class">.child</span> &#123;<br>  <span class="hljs-attribute">border</span>: <span class="hljs-number">5px</span> solid green;<br>  <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span> <span class="hljs-number">50px</span>;<br>&#125;<br><br></code></pre></td></tr></table></figure><hr><h2 id="父元素-height-属性已写"><a href="#父元素-height-属性已写" class="headerlink" title="父元素 height 属性已写"></a><strong>父元素 <code>height</code> 属性已写</strong></h2><h3 id="flex布局-推荐方案"><a href="#flex布局-推荐方案" class="headerlink" title="flex布局(推荐方案)"></a>flex布局(推荐方案)</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs CSS"><span class="hljs-selector-class">.parent</span> &#123;<br>    <span class="hljs-attribute">border</span>: <span class="hljs-number">3px</span> solid green<br>    height: <span class="hljs-number">400px</span>;<br>    <span class="hljs-attribute">display</span>: flex;<br>    <span class="hljs-attribute">justify-content</span>: center;<br>    <span class="hljs-attribute">align-items</span>: center;<br>&#125;<br><span class="hljs-selector-class">.child</span>&#123;<br>    <span class="hljs-attribute">border</span>: <span class="hljs-number">3px</span> solid green<br>    width: <span class="hljs-number">300px</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="margin"><a href="#margin" class="headerlink" title="margin"></a>margin</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs CSS"><span class="hljs-selector-class">.parent</span> &#123;<br>  <span class="hljs-attribute">height</span>: <span class="hljs-number">400px</span>;<br>  <span class="hljs-attribute">position</span>: relative;<br>&#125;<br><span class="hljs-selector-class">.child</span> &#123;<br>  <span class="hljs-attribute">width</span>: <span class="hljs-number">300px</span>;<br>  <span class="hljs-attribute">height</span>: <span class="hljs-number">200px</span>;<br>  <span class="hljs-attribute">position</span>: absolute;<br>  <span class="hljs-attribute">left</span>: <span class="hljs-number">50%</span>;<br>  <span class="hljs-attribute">top</span>: <span class="hljs-number">50%</span>;<br>  <span class="hljs-attribute">margin-left</span>: -<span class="hljs-number">150px</span>;    <span class="hljs-comment">/* 子元素 width 的一半 */</span><br>  <span class="hljs-attribute">margin-top</span>: -<span class="hljs-number">100px</span>;     <span class="hljs-comment">/* 子元素 height 的一半 */</span><br>&#125;<br></code></pre></td></tr></table></figure><h2 id="translate"><a href="#translate" class="headerlink" title="translate"></a>translate</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs CSS"><span class="hljs-selector-class">.parent</span> &#123;<br>  <span class="hljs-attribute">height</span>: <span class="hljs-number">400px</span>;<br>  <span class="hljs-attribute">position</span>: relative;<br>&#125;<br><br><span class="hljs-selector-class">.child</span> &#123;<br>  <span class="hljs-attribute">position</span>: absolute;<br>  <span class="hljs-attribute">left</span>: <span class="hljs-number">50%</span>;<br>  <span class="hljs-attribute">top</span>: <span class="hljs-number">50%</span>;<br>  <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">translate</span>(-<span class="hljs-number">50%</span>, -<span class="hljs-number">50%</span>);<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="margin-auto"><a href="#margin-auto" class="headerlink" title="margin:auto"></a>margin:auto</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs CSS"><span class="hljs-selector-class">.parent</span> &#123;<br>  <span class="hljs-attribute">height</span>: <span class="hljs-number">400px</span>;<br>  <span class="hljs-attribute">position</span>: relative;<br>&#125;<br> <br><span class="hljs-selector-class">.child</span> &#123;<br>  <span class="hljs-attribute">width</span>: <span class="hljs-number">300px</span>;<br>  <span class="hljs-attribute">height</span>: <span class="hljs-number">200px</span>;<br>  <span class="hljs-attribute">position</span>: absolute;<br>  <span class="hljs-attribute">left</span>: <span class="hljs-number">0</span>;<br>  <span class="hljs-attribute">top</span>: <span class="hljs-number">0</span>;<br>  <span class="hljs-attribute">right</span>: <span class="hljs-number">0</span>;<br>  <span class="hljs-attribute">bottom</span>: <span class="hljs-number">0</span>;<br>  <span class="hljs-attribute">margin</span>: auto;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="高度为-100-的伪元素-display-inline-block"><a href="#高度为-100-的伪元素-display-inline-block" class="headerlink" title="高度为 100% 的伪元素 + display: inline-block"></a>高度为 100% 的伪元素 + display: inline-block</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs CSS"><span class="hljs-selector-class">.parent</span> &#123;<br>  <span class="hljs-attribute">height</span>: <span class="hljs-number">400px</span>;<br>  <span class="hljs-attribute">text-align</span>: center;<br>&#125;<br> <br><span class="hljs-selector-class">.parent</span><span class="hljs-selector-pseudo">:before</span>,<br><span class="hljs-selector-class">.parent</span><span class="hljs-selector-pseudo">:after</span> &#123;<br>  <span class="hljs-attribute">content</span>: <span class="hljs-string">&quot;&quot;</span>;<br>  <span class="hljs-attribute">display</span>: inline-block;<br>  <span class="hljs-attribute">height</span>: <span class="hljs-number">100%</span>;            <span class="hljs-comment">/* 前后伪元素高度 100% */</span><br>  <span class="hljs-attribute">vertical-align</span>: middle;  <span class="hljs-comment">/* 伪元素垂直居中 */</span><br>&#125;<br> <br><span class="hljs-selector-class">.child</span> &#123;<br>  <span class="hljs-attribute">width</span>: <span class="hljs-number">300px</span>;<br>  <span class="hljs-attribute">display</span>: inline-block;<br>  <span class="hljs-attribute">vertical-align</span>: middle;  <span class="hljs-comment">/* 子元素在 100% 高度中垂直居中 */</span><br>&#125;<br></code></pre></td></tr></table></figure><hr><h3 id="Table-方案"><a href="#Table-方案" class="headerlink" title="Table 方案"></a>Table 方案</h3><h4 id="1-table"><a href="#1-table" class="headerlink" title="1. table"></a>1. table</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs HTML"><span class="hljs-tag">&lt;<span class="hljs-name">table</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">tr</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span><br>            Lorem ipsum dolor sit amet, consectetur adipisicing elit. Tempora harum voluptates quae velit eveniet, accusamus, quas ratione placeat! Nisi perferendis facere, error sed possimus molestias et. Quas accusantium, maiores aliquid?<br>        <span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">tr</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">table</span>&gt;</span><br></code></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs CSS"><span class="hljs-selector-tag">table</span> &#123;<br>  <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid red;<br>  <span class="hljs-attribute">height</span>: <span class="hljs-number">400px</span>;<br>&#125;<br><br><span class="hljs-selector-tag">td</span> &#123;<br>  <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid green;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="2-div-模仿-table"><a href="#2-div-模仿-table" class="headerlink" title="2. div 模仿 table"></a>2. div 模仿 table</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs CSS"><span class="hljs-selector-class">.parent</span> &#123;<br>  <span class="hljs-attribute">height</span>: <span class="hljs-number">400px</span>;<br>  <span class="hljs-attribute">display</span>: table;<br>&#125;<br> <br><span class="hljs-selector-class">.child</span> &#123;<br>  <span class="hljs-attribute">display</span>: table-cell;<br>  <span class="hljs-attribute">vertical-align</span>: middle; <br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>CSS</category>
      
    </categories>
    
    
    <tags>
      
      <tag>CSS CSS基础 CSS布局</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>解释clearfix</title>
    <link href="/2023/01/08/CSS%E5%9F%BA%E7%A1%80-%E8%A7%A3%E9%87%8Aclearfix/"/>
    <url>/2023/01/08/CSS%E5%9F%BA%E7%A1%80-%E8%A7%A3%E9%87%8Aclearfix/</url>
    
    <content type="html"><![CDATA[<p>我经常在阅读别人的网页代码时，看到人们为HTML标签（尤指包含了子标签的父标签）添加<code>clearfix</code>类，并在CSS样式中写下如下这样的代码。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs CSS"><span class="hljs-selector-class">.clearfix</span><span class="hljs-selector-pseudo">::after</span> &#123;<br>    <span class="hljs-attribute">content</span>:<span class="hljs-string">&quot;&quot;</span>;<br>    <span class="hljs-attribute">display</span>:block;<br>    <span class="hljs-attribute">clear</span>:both;<br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs CSS"><span class="hljs-selector-class">.clearfix</span><span class="hljs-selector-pseudo">::after</span> &#123;<br>  <span class="hljs-attribute">content</span>: <span class="hljs-string">&quot;&quot;</span>;<br>  <span class="hljs-attribute">clear</span>: both;<br>  <span class="hljs-attribute">display</span>: table;<br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs CSS"><span class="hljs-selector-class">.clearfix</span>&#123;<br>    <span class="hljs-attribute">overflow</span>: auto;<br>&#125;<br></code></pre></td></tr></table></figure><p>这是为什么呢？初学CSS时，我非常的疑惑。</p><p>答案也很简单，为了<strong>清除浮动</strong>。</p><p>在CSS3未出世前，前端工程师除了使用默认就有的flow规则，还使用float布局，</p><p>即</p><ol><li><p>通过CSS给子元素设定float和width属性</p></li><li><p>编写clearfix类的CSS代码, 然后在HTML中为父元素添加clearfix类。</p></li></ol><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs CSS">// 一份常见的clearfix代码<br><span class="hljs-selector-class">.clearfix</span><span class="hljs-selector-pseudo">::after</span> &#123;<br>    <span class="hljs-attribute">content</span>:<span class="hljs-string">&quot;&quot;</span>;<br>    <span class="hljs-attribute">display</span>:block;<br>    <span class="hljs-attribute">clear</span>:both;<br>&#125;<br></code></pre></td></tr></table></figure><p>案例：<br>尝试如下代码，你通过添加和移除父元素的clearfix类来决定是否<code>清除浮动</code>，<br>尝试过后，你会发现<code>清除浮动</code>前，父元素的高度为0。<br><code>清除浮动</code>后，父元素的高度就被子元素撑起来了！</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;parent clearfix&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;child&quot;</span>&gt;</span>Child<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;child&quot;</span>&gt;</span>Child<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;child&quot;</span>&gt;</span>Child<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-class">.child</span>&#123;<br>  <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid red;<br>  <span class="hljs-attribute">width</span>: <span class="hljs-number">100px</span>;<br>  <span class="hljs-attribute">float</span>: left;<br>&#125;<br><br><span class="hljs-selector-class">.parent</span>&#123;<br>  <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid green;<br>&#125;<br><br><span class="hljs-selector-class">.clearfix</span><span class="hljs-selector-pseudo">::after</span>&#123;<br>  <span class="hljs-attribute">content</span>: <span class="hljs-string">&#x27;&#x27;</span>;<br>  <span class="hljs-attribute">display</span>:block;<br>  <span class="hljs-attribute">clear</span>:both;<br>&#125;<br></code></pre></td></tr></table></figure><p>你可以通过直观的现象去记忆理解，也可以看看下面的解释。</p><h2 id="不是人话的原理解释"><a href="#不是人话的原理解释" class="headerlink" title="不是人话的原理解释"></a>不是人话的原理解释</h2><p>父元素内部的元素始终遵循flow布局的规则。</p><p><code>::after</code>含义：父元素内部会出现一个元素，且该元素始终为父元素内部最后的一个元素。</p><p>当内部子元素全部添加float属性后，将不参与父元素的高度计算，父元素高度即为剩余元素的高度总和。所以，此时父元素的高度为0;</p><p>当添加clearfix代码后, 最后一个块状元素便让它之前的元素清除了浮动(它不会被浮动元素覆盖)，使得之前添加了float属性浮动的元素同最后一个元素一起重新参与到父元素的高度计算, 页面上的效果就是父元素重新包含了子元素。</p><p>理解要点就是:</p><ul><li>伪元素的理解</li><li>clear属性的效果</li><li>把握住清除浮动前后父元素的高度计算。</li></ul><h2 id="等效代码"><a href="#等效代码" class="headerlink" title="等效代码"></a>等效代码</h2><p>贴到<a href="https://www.jsbin.com/">JsBin</a>展示一下吧。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;parent clearfix&quot;</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;child&quot;</span>&gt;</span>Child<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;child&quot;</span>&gt;</span>Child<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;child&quot;</span>&gt;</span>Child<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;parent&quot;</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;child&quot;</span>&gt;</span>Child4<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;child&quot;</span>&gt;</span>Child5<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;child&quot;</span>&gt;</span>Child6<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;after&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-class">.child</span>&#123;<br>  <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid red;<br>  <span class="hljs-attribute">width</span>: <span class="hljs-number">100px</span>;<br>  <span class="hljs-attribute">float</span>: left;<br>&#125;<br><br><span class="hljs-selector-class">.parent</span>&#123;<br>  <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid green;<br>&#125;<br><br><span class="hljs-selector-class">.clearfix</span><span class="hljs-selector-pseudo">::after</span>&#123;<br>  <span class="hljs-attribute">content</span>: <span class="hljs-string">&#x27;&#x27;</span>;<br>  <span class="hljs-attribute">display</span>:block;<br>  <span class="hljs-attribute">clear</span>:both;<br>&#125;<br><br><span class="hljs-selector-class">.after</span>&#123;<br>  <span class="hljs-comment">/*clear:left; clear:right;*/</span><br>  <span class="hljs-attribute">clear</span>:both;<br><br>  <span class="hljs-comment">/* 在块级元素上，clear属性才生效 */</span><br>  <span class="hljs-attribute">display</span>:block; <br><br>  <span class="hljs-comment">/*</span><br><span class="hljs-comment">  width:10px;</span><br><span class="hljs-comment">  height:10px;</span><br><span class="hljs-comment">  background-color:black;</span><br><span class="hljs-comment">  */</span><br><br>  <span class="hljs-attribute">content</span>:<span class="hljs-string">&#x27;&#x27;</span>;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>CSS</category>
      
    </categories>
    
    
    <tags>
      
      <tag>CSS CSS基础 CSS布局</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
